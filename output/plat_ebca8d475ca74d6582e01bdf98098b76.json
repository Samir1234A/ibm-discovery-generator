{
  "sdl_source_type": "platform",
  "field_launch_date": "2020-07-24T00:00:00",
  "changed": "2019-07-10T00:00:00",
  "field_platform_contacts": "Neoma D Bariain| Yukari T Blumhofer| Harold S Dugo| Argeo I Azpiazu| Serhiy J Glaser| Ottavio K Rostagno| Lucie D Bellido",
  "field_communities_of_practice": "interrelationship vilifying| Python's wackiness's| typescripts Hegel's| bombshell poisoners| hinterlands whiplash| superficiality's splintered| salacious allotment's| tailspins stipulated| Tokay inboard",
  "platform_leader_name": "Eiharne L Lagayette",
  "field_banner_subhead": "rehabilitate syncopate",
  "platform_url": "https://legless.com",
  "sdl_date": "2020-08-07T00:00:00",
  "countryPublished": "Estonia",
  "conference": "Krebs wrathful eh Pengpeng",
  "originalAuthorName": "Broulaye d Haslam",
  "title": "DiCaprio guardsman garment friends",
  "declaredTags": "effective security measures with effective conversations|artificial intelligence|cyber awareness|medicine|IoT",
  "releaseReason": "Katmandu's/sally",
  "docName": "RP_10_1058",
  "fundingCenter": 74,
  "resourceURL": "https://runoffs.com",
  "fundingDepartment": "qf35",
  "caseNumber": "33-5654",
  "publicationDate": "1/22/2020 12:00:00 AM",
  "releaseYear": 2004,
  "releaseStatement": "Publicity/Promotion",
  "approver": "$Iveth $Bakker",
  "handCarry": 9,
  "authorDivision": "yl29",
  "copyrightOwner": "Thais Fiorini",
  "lastModifiedDate": "10/21/2016 12:00:00 AM",
  "releaseDate": "4/29/2009 12:00:00 AM",
  "onMitrePublicSrvr": 0,
  "projectNumber": "3185OKUW29",
  "materialType": "Article",
  "publicationType": "Book",
  "authorCenter": 53,
  "originalAuthorID": "Lada",
  "mitrePublicServer": 0,
  "subjectTerminology": "Aviation and Aeronautics (General)",
  "dateEntered": "1/5/2008 12:00:00 AM",
  "documentInfoURL": "https://mammon's angle Ticketmaster's ghetto's mistrial's.com",
  "softShell": 0,
  "publishedOnNonMITREServer": 0,
  "priorCaseNumbers": "CASE2: 16-1196|CASE1: 17-4622|CASE1: 16-4753",
  "organization": "pf40",
  "authorDepartment": "dh30",
  "publicationYear": 2002,
  "sensitivity": "Public",
  "copyrightText": "(c) 2016 The MITRE Corporation All Rights Reserved",
  "fundingSource": "CAMH FFRDC Contracts",
  "level1": "Programs & Technology",
  "fundingDivision": "likeableness nasal Nicholas's hubs canvasbacks",
  "publishedOutsideUSA": 0,
  "level3": "ey94",
  "level2": "dc79",
  "sdl_id": "ebca8d475ca74d6582e01bdf98098b76",
  "text": "updates the appropriate model and reruns CSG to assess the impact of the changes. An overview of CSG is provided here. CSGs game formulation searches through the combinatorics of cyber incidents, attack paths, impacts, and defender method employments using Minimax. CSG is formulated as a two-player zero-sum game. As such it implements rational decision making, where both players work to best counteract each others moves. CSG assumes that the attacker knows about the system they are attacking. This is reasonable because CSGs focus is on defense employment for the long term, assuming that attackers will be able to learn about and may pursue targets over the lifetime of a system. Methods for trying to deceive, delay, or deter an attacker over the short term would motivate a different game formulation. Examples of different formulations are shown in [6]. The system metric in CSG is a system risk score. This score comes from computing the different impacts that an attacker can cause combined conditioned on the how difficult the system architecture and defenses makes it to cause those impacts (described later in this paper). In the game, the defender tries to minimize this value. A state in the game represents a configuration of the system, either with no defenses employed, or some status quo version of the system that one wants to improve. To compute the risk score for that state, for the attacker player generates an attack tree that looks multiple attack steps ahead to identify possible impacts. The leaf nodes of the attack tree provide an expected value (EV) computed from the impacts and the probabilities (as shown in Figure 5). The defender then employs defenses to reduce expected value of the impacts the attacker can cause, and the game proceeds in typical game tree fashion. Starting from the initial state it employs MiniMax, to assess move pairs of a defender action (min), and the attackers revised attack tree given the defender changes (max). The resultant game tree assesses how each defender method can best reduce the risk score. Since the employment of each defender method incurs a cost, the game is over when either the game identifies the optimal set of defense methods to use when the defender has spent the amount of money they have allocated, or when a complete portfolio analysis is performed to compute the Pareto frontier for each price point. Figure 1 demonstrates the output of CSG, where the cost and performance of each portfolio option is plotted. The red dots show the Pareto optimal portfolios. In this example, 55,296 defense portfolio options were considered. With no defenses the risk score was 8492934. With all the security methods applied, the risk was reduced to 2038408, for a cost of $250k. However, spending ~$39k, the risk can be reduced to 2779440. This represents 89% of the risk reduction for only 16% of the cost. Figure 1: Security Portfolio Effectiveness vs. Cost CSG requires four system models. A CMIA process model computes impacts. A system topology model describes the component interconnectivity, type and trust relationships. It contains a built- in (default) attacker model. Lastly, models of the defender methods are needed. Each of these models is described below. 2.1 Modeling Incident Impacts CSG uses CMIA process models to determine the consequence (losses) incurred from cyber incidents, and the CMIA software is embedded in CSG. CMIA makes it possible to capture mission details as an executable simulation. It models mission activities, ICT activities, activity durations, activity dependencies, ICT resources, temporal constraints, data, and control flows. ICT resources in the process model can be affected by cyber incident effects represented by the DIMFUI cyber incident effect taxonomy described in [7] and relates the occurrence of an effect to mission outcomes in the form of mission impacts. Figure 2 shows the CMIA tool displaying a Business Process Modeling Notation (BPMN) diagram, and shows some of the underlying details that turn the model into an executable simulation. It is outside the scope of this paper to describe CMIA in detail but for more information on the CMIA method and tool see [12] [9]. Figure 2: Process Model Showing Mission Activity Order and Control Flow Dependencies CMIA process models can be probabilistic and stochastic, allowing one to bound the uncertainties associated with the model. Running combinatorics on the set of cyber incident effects allows the criticality of cyber resources to be estimated [12] or validated by mission subject matter experts. CMIA also supports the assessment of multiple (simultaneous) incidents, allowing CSG to run through combinations of the possible cyber incident effects that will be assessed using MiniMax. 2.2 Modeling the Attacker CSG, provides a default attacker model that defines the probability that attacks will succeed given the topological constraints that the system imparts on the attacker. For the attacker to affect ICT resources that can cause impacts, the attacker must find a pathway to access them. The attack model conditions the probability of an attack succeeding with the following characteristics: - Whether the attacker is trying to compromise a component they can directly connect to, or whether it requires crossing a network trust boundary to access - Whether that component is the same type as one of the components that the attacker has already demonstrated they can compromise - Whether a component is known to be vulnerable to known exploits - Whether the component is a server that contains one or more network services - Whether user roles, who have access to each resource, can leverage those roles to access other components in the network to create impact Figure 3: Default Attack Model Figure 3 shows the probabilities of attacker success given topology relationships. If they first try and attack host Win 7-2 before attacking something else, the diagram shows that is it possible to attack the host from the outside with probability of success |. It also shows there is a probability in becoming an inside user or subverting an insider account, where the number of accounts N, will affect the risk \\n |. Once a host is compromised an attacker can compromise other resources on the devices with |. Once in, the attacker can try to attack other cyber resources of the same type as one of the components already compromised then the probability is P(S|STC). If its of a different type, then the attacker needs a new zero-day attack and has the probability |\\n. Throughout, whether the host is a client or a server will affect the probabilities. The probability of successfully navigating the network to compromise a cyber resource is computed using the chain rule shown in Equation 1. This attack model captures the basic security properties of segmentation, diversity, and least privilege and can be composed across multiple networks, trust, and segmentation boundaries. It mathematically credits a defender reducing the amount of access to components that can cause significant impacts, for diversifying components that can cause significant impacts when attacked in combination, it credits a defender for making it harder to reach the components that cause significant impacts , , , . , |, , . , , |, . , . . , | Equation 1: General Form of the Chain Rule 2.3 Modeling System Topology and Applying the Attack Model CSG computes impacts and then uses the attacker model to estimate the probability that the impacts will occur given the constraints of the system topology. The topology model includes cyber components, applications, data, user account groups, and access controls that enforce trust relationships. Model elements include single ICT resources as well as ICT resource pools that represent functionally identical groupings of resources of the same type. The model also requires resource type information for each ICT resource. This makes it possible to know when the same attacker exploit from an earlier step might be reused, and when it cant. The existence of connections, firewall rules, and the access of user roles define connectivity capabilities and restrictions between ICT resources. An example of a topology model is shown in Figure 4 Infrastructure components are in blue, applications and services are shown in green, and data elements are in yellow. User group populations are also included in the model, but the diagram does not show the trust relationships of who can communicate with who, that are also captured in the model. Figure 4: A Simple Topology Model for a Point of Sale System 2.4 Computing the Risk Score The topology model makes it possible to compute attack trees. This process is illustrated in Figure 5. The figure illustrates the complexity of analyzing even a simple four host system. All the mission impacts in the figure would be computed from a CMIA model of the system. The impacts shown include impacts from when multiple components are compromised. Even though the model in the figure contains only two subnets, the model represents a trust relationship from S1 and S2 to S4. The attack tree is then generated, using the attacker model to estimate the probability of attack steps",
  "updated_at": "7/19/2016 12:00:00 AM",
  "created_at": "8/10/2004 12:00:00 AM"
}