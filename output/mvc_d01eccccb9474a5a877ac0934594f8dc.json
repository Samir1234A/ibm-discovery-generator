{
  "sdl_source_type": "MVC",
  "project_name": "smr",
  "project_sponsor": "rcuumaumcf-6155",
  "project_end": "2004-09-05T00:00:00",
  "portfolio": "fluctuations deserved",
  "super_portfolio": "QAD",
  "sub_portfolio": "ouo - rehearsed exterminated",
  "clarify": "Cancelled",
  "project_url": "http://Moiseyev's.com",
  "project_page_charge_code": "948PPEF",
  "project_leader": "Kenisha A Schwinte",
  "sdl_date": "2020-07-25T00:00:00",
  "countryPublished": "Bulgaria",
  "conference": "dismisses libertines fv Barbra",
  "originalAuthorName": "Housna j Meisterernst",
  "title": "planners infection implacability's",
  "declaredTags": "ICS|ablation|mission|employee voices",
  "releaseReason": "Donny/pawpaw's",
  "docName": "EB_17_2453",
  "fundingCenter": 47,
  "resourceURL": "https://engrave.com",
  "fundingDepartment": "mc87",
  "caseNumber": "45-1618",
  "publicationDate": "3/8/2019 12:00:00 AM",
  "releaseYear": 2005,
  "releaseStatement": "Conference/Workshop",
  "approver": "$Ramona $Lenglet",
  "handCarry": 8,
  "authorDivision": "fx50",
  "copyrightOwner": "Seymour Quinti",
  "lastModifiedDate": "10/26/2013 12:00:00 AM",
  "releaseDate": "2/20/2006 12:00:00 AM",
  "onMitrePublicSrvr": 0,
  "projectNumber": "4110QBQB98",
  "materialType": "Paper",
  "publicationType": "Paper",
  "authorCenter": 51,
  "originalAuthorID": "Domnica",
  "mitrePublicServer": 0,
  "subjectTerminology": "Mathematics (General)",
  "dateEntered": "9/30/2014 12:00:00 AM",
  "documentInfoURL": "https://shadow squeezer demijohn's Chesapeake's falsities.com",
  "softShell": 0,
  "publishedOnNonMITREServer": 0,
  "priorCaseNumbers": "CASE1: 16-4196",
  "organization": "vu59",
  "authorDepartment": "xj15",
  "publicationYear": 2004,
  "sensitivity": "Public",
  "copyrightText": "(c) 2016 The MITRE Corporation All Rights Reserved",
  "fundingSource": "FAA FFRDC Contracts",
  "level1": "Programs & Technology",
  "fundingDivision": "commingle madness's Strong Moloch haunts",
  "publishedOutsideUSA": 0,
  "level3": "ul23",
  "level2": "dn21",
  "sdl_id": "d01eccccb9474a5a877ac0934594f8dc",
  "text": "    \"text\": \" () IEEE TRANSACTIONS ON GEOSCIENCE AND REMOTE SENSING, VOL. xx, NO. yy, MONTH 201x. DOI:xxxx Approved for Public Release; Distribution Unlimited. Case Number 16-3868 \\n 1 \\nAbstractThe past decade has seen the emergence of many hyperspectral image (HSI) analysis algorithms based on graph theory and derived manifold coordinates. The performance of these algorithms is inextricably tied to the graphical model constructed from the spectral data, i.e., the community structure of the spectral data must be well represented to extract meaningful information. This paper provides a survey of many spectral graph generation techniques currently used in the hyperspectral community and discusses their advantages and disadvantages for hyperspectral analysis. A focus is provided on techniques influenced by spectral density from which the concept of community structure arises. Two density weighted graph construction techniques not previously used in hyperspectral imaging, shared nearest neighbors (SNN) and mutual proximity (MP), are also introduced and compared. Density-based graph generation is demonstrated to be more effective than fixed sized lists on multiple HSI classification examples. Additionally, application of many complex edge-reweighting techniques often does not improve the health of nearest neighbor lists, placing doubt on their use for HSI data as currently defined. \\nIndex Terms graph theory, hyperspectral imaging, imaging spectroscopy, manifold, spectral density I. INTRODUCTION YPERSPECTRAL imaging (HSI) produces spectral radiance measurements for each spatial location in the acquired scene. The spectral measurement for a particular scene location (pixel) is called a spectrum which contains information about the properties of the sensed area at many wavelengths (typically hundreds) and may be thought of as a vector in a d dimensional space, , where d is the number of spectral \\nbands [1]. The spectrum, = , , , \\n, may be \\nanalyzed in its native spectral radiance space or may be \\nPaper received xx September, 2016; revised paper received xx November, 2016; accepted for publication xx June 2017. This work was performed under the direction of George Mason University. J. Stevens is an image scientist in the Space and Intelligence Systems division of Harris Corporation, Reston, VA USA. He is currently a student at George mason University, Fairfax, VA USA in the computational sciences and informatics department (e-mail: jsteveng@gmu.edu). R. Resmini is a research scientist in the Advanced ISR Solutions Department of the MITRE Corporation, McLean, Virginia, USA, and an Associate Professor in the College of Science at George Mason University, Fairfax, Virginia, USA (e-mail: rresmini@gmu.edu). D. Messinger is currently a Professor, the Xerox Chair in Imaging Science, and Director of the Chester F. Carlson Center for Imaging Science at the Rochester Institute of Technology, Rochester, USA (e-mail: messinger@cis.rit.edu). Digital Object Identifier: xx.xxx.xx converted into physical units such as reflectivity or emissivity. The aggregate collection of all such radiance measurements or derived physical units is called a hypercube, a three dimensional structure comprised of two spatial (x,y) dimensions and a wavelength dimension (). The rich spectral \\ncontent of these data enable greater material discrimination than possible with multispectral data. Spectral image analysis algorithms developed over the past 25 years are primarily based on statistical and geometric subspace or mixing models. A brief qualitative description of the statistical and geometric models is provided below whereas the reader is referred to [2]-[5] for excellent technical reviews of common statistical, subspace, and mixing model algorithms for target detection, anomaly detection, classification, and change detection. Statistical models treat each spectrum as a d-D random vector. Each vector (spectrum) is a realization of a random spectral distribution and thus lives within a region of hyperspace delineated by a probability density function. Many parametric probability density functions possess elliptical symmetry, are fast, and simple to implement with the multivariate normal distribution (MVN) being the most common in the HSI literature [6]. Stochastic expectation maximization (SEM), the Reed-Xiaoli (RX) detector, and the spectral matched filter (SMF) are common statistical methods making use of the multivariate normal model for classification, anomaly detection, and target detection respectively [2][5]. However, hyperspectral data approximation by parametric statistical models, especially the MVN, is diminishing with increasing spatial and spectral resolution [6][7], so techniques not reliant on parametric models need to be developed. Geometric models treat each spectrum as a deterministic point in . A hyperspectral image may therefore be \\ninterpreted as a scattered set of points in d-D hyperspace. Hyperspectral imaging typically acquires hundreds of bands (dimensions), but significant band-to-band correlation exists and the data usually reside in a lower dimensional subspace, , where [8]. Subspace basis vectors can be \\nconstructed from pure materials in the scene called endmembers [9][10] or from eigenvectors of the spectral covariance matrix [1][2]. These methods are called linear mixture models and vector subspace models respectively. In the former case, the basis may not be orthogonal, whereas in the latter, the basis is guaranteed to be orthogonal by the Eigen or singular value decomposition of the spectral covariance matrix. Algorithms based on these geometric models treat Spectral-Density Based Graph Construction Techniques for Hyperspectral Image Analysis Jeffrey R. Stevens, Ronald G. Resmini, and David X. Messinger H IEEE TRANSACTIONS ON GEOSCIENCE AND REMOTE SENSING, VOL. xx, NO. yy, MONTH 201x. DOI:xxxx Approved for Public Release; Distribution Unlimited. Case Number 16-3868 \\n 2 either the background spectra, target spectra, or both, as existing within subspaces. Some common examples are the adaptive and Generalized Likelihood Ratio Test (GLRT) subspace detectors [2]. The statistical and geometric algorithms discussed thus far are linear methods, hence may be ineffective at modeling nonlinearities present in HSI data. The three most common causes of nonlinearities in hyperspectral data are (1) variations in material reflectivity with illumination and viewing angle, i.e., the bidirectional reflectance distribution function (BRDF), (2) transmissive media such as water, and (3) intimate mixing found in many soils [10][11]. New methods are therefore required to analyze data exhibiting nonlinearities and lack of adherence to the MVN. In 2005, Bachmann et al. [11] from the Naval Research Laboratory explored a new geometric perspective in hyperspectral analysis. They viewed spectra as vertices (nodes) in an d-D graph, where edges represent pixel similarity. Their method models hyperspace geometry (or structure) without the limitations of strict statistical forms or linear subspaces. Bachmann first applied methods derived from these graphs towards the classification of wetland HSI imagery exhibiting nonlinear behavior [11][12]. Several researchers have continued the development of graph-based techniques due to the ideas presented in Bachmanns seminal papers [7][13][19]. The success of any graph-based analysis is intimately tied to the quality of the graph constructed from the spectral data [13]. Edges must be judiciously chosen to accurately model community structure inherent in the data without over (under) connecting the nodes. Many of these graph construction techniques are founded on the k-nearest neighbor (k-NN) relationship because of its adaptability to both scale and density as well as its ability to follow clusters of arbitrary shape. We will compare and contrast these methods in this paper with the intent to provide a consolidated reference for these techniques. The remainder of this paper is as follows. Section II provides a survey of spectral graph construction techniques found in the hyperspectral remote sensing literature. Two new spectral graph construction techniques are introduced in Section III, each with multiple variants. A performance evaluation of the spectral graph construction techniques presented in Sections II and III is provided in Section IV. Conclusions and directions of future study are provided in Section V. II. HSI GRAPH CONSTRUCTION TECHNIQUES Hyperspectral data does not natively exist as a graph, therefore must be converted into graphical form by selection of a function or heuristic in order to enable graph-based analysis. In this section, we first introduce some graphical terminology and then detail many common graph construction techniques found in the hyperspectral remote sensing literature. A graph, = , , in its simplest form is defined as a pair \\nof two finite sets: a vertex (or node) set and an edge set, denoted V and E respectively. Vertices are simply points in d- D space determined by the coordinates of each spectrum. The size of the vertex set, ||, is simply the number of pixels in the \\nhyperspectral image. We denote a general vertex by an italics , whereas specific vertices (pixels) are indicated using \\nsubscripts, e.g., . Note that the terms node, vertex, and pixel \\nare used interchangeably throughout the text based on the context of the discussion. The edge set may be either directed or undirected. Directed edges (and hence graphs) utilize ordered pairs of points indicating the source and sink of the edge, i.e., , represents an edge from to . The ordering is \\nirrelevant for undirected edges. For our purposes, all edges are undirected and simply indicate a relationship between pixels. Undirected graphs without loops ( and multiple edges \\nbetween the same endpoints are called simple graphs [14] and are the focus of our investigation. Central to all spectral graph construction techniques is the concept of a vertex neighborhood. A neighborhood, , is a \\nset of vertices that are related (deemed similar) to the vertex",
  "updated_at": "4/5/2006 12:00:00 AM",
  "created_at": "9/14/2006 12:00:00 AM"
}