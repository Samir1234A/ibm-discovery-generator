{
  "sdl_source_type": "MPL",
  "productName": "restoring deterioration's",
  "uploadedate": "2016-04-29T00:00:00",
  "productUrl": "http://strategies.com",
  "creatorNames": "Fengmei d Grady;Medir k Malumbres;Zane h Pancorbo",
  "uploaded": "2019-01-14T00:00:00",
  "sdl_extracted_summary": "Set of solutions. Although the original candidates show variations in performance with respect to sector congestion, the Advisory Sets defined by the MOGA include only reroutes that exhibit the lowest (best) sector congestion. By capturing these relationships explicitly, PCA readily identifies the critical trade-offs that exist in the set of candidates returned. The remaining two metrics, route blockage and schedule disruption are inversely correlated with each other and Fig 6 Principal Components of Pareto Set Solutions highly correlated with PC2. The inverse relationship implies that Advisory Sets which perform better in schedule disruption (lower values) will be represented by solutions with low values in PC2, while solutions that perform better in route blockage (lower values) will be represented by solutions with high values in PC2. This inverse relationship identifies the second critical trade-off in the Pareto Set for this example. Fig 6 displays the Pareto Set of solutions as points in the two-dimensional space defined by PC1 and PC2. Fig 6 is annotated to include the relationship between the principal components and the original ten metrics. In Fig 6, we see four distinct groups of solutions. These groups clearly capture the correlations between the original metrics represented in PC1, but which would likely have been obscured in a higher dimension space. Comparison of Pareto Set ClusteringB. To illustrate the benefits of reducing trade-space dimensionality, we employ the clustering procedure described in Section IV. Fig 7 shows the clusters and representative solution generated when clustering the solutions based on their similarity in the two principal components. Thirty-nine (39) clusters are generated and are distinguished by color in Fig 7. Within each cluster, the representative solution is shown as a rectangle. Viewing Fig 7 we see that Fig. 8 Comparison of Representative Solutions Across Critical Trade-Space Metrics. (Marker size \\ncorresponds to Flights in Flow values) Fig 7 Clustering using Principal Components the associated distance versus schedule disruption \\ntrade-offs, and flights in flow is shown by marker \\nsize, where larger (higher) values indicate more \\nAdvisory Sets that create more flows. Examining Fig. 8, we see the general trend between the trade-offs defined by PCA, namely that distance varies inversely with flights in flow and that route blockage varies inversely with schedule disruption. However, this trend is not universal, and solutions exist that balance these objectives. Specifically, the middle panel in Fig. 8 captures solutions that have different levels of schedule disruption for the same route blockage cost. Almost all representatives in this category were generated by the PCA-defined clusters; directly clustering the 10 metrics fails to capture this critical region in the trade-space. Comparison of Representative Advisory Sets C.\\nThe gray arrows in Fig. 8 correspond to three Advisory Sets from different regions of this trade-space. These three solutions were selected to illustrate how the reroutes within these Advisory Sets characterize the associated trade-offs. Table 2 lists the color corresponding to each flights reroute. Fig. 9 shows the reroutes for Advisory Set 1, representing a solution that performs well in distance and route blockage, moderately in schedule disruption, but poorly in flights in flow. Viewing Fig. 9, we see that the reroutes move around the weather shown in Fig. 4 (corresponding to the airspace south of the Washington-area airports). As the flights in flow metric is not a priority for reroutes in this area of the trade-space, the reroutes do not generate flows. Fig. 10 shows the reroutes for Advisory Set 2, drawn from the critical trade-space identified in Fig. 8. Viewing the reroutes in Fig. 10, we see that several reroutes overlap for portions of their new route, forming the flows prioritized by solutions in this region of the trade-space. The most prominent flows are located in the NY-area region (top right of the figure), which is a particularly important area for adding structure. Fig. 11, displays the reroutes for Advisory Set 3, which prioritizes schedule disruption above all else. As Fig. 9 Reroutes in Advisory Set 1 expected, the reroutes are fairly direct; however, the high route blockage costs indicate that they do not avoid the primary constraint of the problem. DiscussionD.\\nThe results generated by the proposed approach provide the reliability sought via the success rate for generating constraint-free solutions using DSP- M [1] while also characterizing the critical trade- space available to traffic managers for consideration. The above analysis highlights the value of PCA in reducing the size of the trade-space and identifying the critical trade-offs that exist. The resulting clusters show the benefit of reducing the design space in this manner, namely that critical trade-offs are better represented than through directly clustering all metrics, where the latter approach can overlook regions of the trade-space containing diverse solutions. However, both approaches still produce too many clusters for a traffic manager to evaluate and further reduction is needed. Although this is an area of continuing research, a few promising directions have been identified. First, PCA can be directly included within the MOGA, as suggested by Reference [23]. This approach would limit the size of the Pareto Set produced by the MOGA and could significantly reduce the computation effort required; however, additional analysis is required to ensure that the solutions generated would provide diverse and viable options to traffic managers. An alternate approach is to use PCA to identify persistent correlations between the multiple metrics \\nFig. 10 Reroutes in Advisory Set 2 Fig. 11 Reroutes in Advisory Set 3 considered, potentially identifying a set of relative weightings that can be used to rank solutions. As opposed to a single static prioritization between metrics, this approach could propose multiple weightings, resulting in multiple solutions being returned. Furthermore, the selection of potential weightings could be influenced by problem-specific parameters. For example, if congestion isnt a major consideration, then weights that emphasize congestion-avoiding solutions could be replaced by weights that vary the importance of other metrics. Incorporating input from traffic managers, either in advance by selecting metrics of higher importance or post-computation by selecting to review Advisory Set reroutes based on the corresponding metrics prioritized by a given solution is likely required. It is not the aim of this approach to eliminate the need for this invaluable input, only to provide the best selection of reroutes for review. In either case, additional testing on multiple examples is required. Although this problem is representative of a convective weather situation, flights were limited to those that could be captured on a fix-pair segment network, an assumption that would need to be relaxed for more general applications. Furthermore, the computation time associated with the MOGA is relatively fast but not fast enough for real time. However, MOGA computation time is directly related to the size of the Pareto Set sought; insights gained through additional analysis can identify appropriate methods for reducing the Pareto Set and the associated computation requirements of the MOGA. ConclusionsVI.\\nThis paper describes an approach for generating a set of weather/constraint avoidance reroutes for tactical traffic flow management applications. In this approach, multiple flights are considered in a coordinated way, and several feasible sets of reroutes (Advisory Sets) are produced that offer meaningful tradeoffs among important performance metrics. This will provide traffic managers with multiple, distinct options for resolving constraints, making it more likely that an operationally acceptable solution can be found quickly. The approach leverages multi-objective optimization, principal component analysis, and spectral clustering to characterize and search huge design spaces, and to isolate the critical design trade-offs that must be considered. Notice This work was produced for the U.S. Government under Contract DTFAWA-10-C-00080 and is subject to Federal Aviation Administration Acquisition Management System Clause 3.5-13, Rights In Data-General, Alt. III and Alt. IV (Oct. 1996). The contents of this material reflect the views of the authors and The MITRE Corporation and do not necessarily reflect the views of the FAA or the DOT. Neither the Federal Aviation Administration nor the Department of Transportation makes any warranty or guarantee, or promise, expressed or implied, concerning the content or accuracy of these views. Approved for Public Release; Distribution Unlimited. Case Number 18-0951. References [1] C. Taylor et al., Design of the SFMA Trajectory Advisory Function, MITRE Technical Report 160139, The MITRE Corporation, McLean, VA, June 2016. [2] J. Krozel et al., Automated Route Generation for Avoiding Deterministic Weather in Transition Airspace, AIAA Journal of Guidance, Control, and Dynamics, vol. 30, no. 1, pp. 144173, JanuaryFebruary 2007. doi: 10.2514/1.22970 [3] J. Prete and J. Mitchell, Safe Rerouting of Multiple Aircraft Flows in the Presence of Time-Varying Weather Data, in AIAA Guidance Navigation and Control Conference and Exhibit, Providence, RI, 2004. doi: 10.2514/6.2004-4791 [4] H. K. Ng, S. Grabbe, and A. Mukherjee, Design and Evaluation of a Dynamic Programming Flight Routing Algorithm using the Convective Weather-Avoidance Model, in AIAA Guidance, Navigation, and Control Conference, Chicago, IL, 2009. doi: 10.2514/6.2009-5862 [5] R. Ahuja, T. Magnanti, and J. Orlin, Network Flows: Theory, Algorithms, and Applications. Englewood Cliffs, NJ: Prentice Hall Inc., 1993. [6] S. Grabbe, B. Sridhar, and A. Mukerjee, Sequential Traffic Flow Optimization with Tactical Flight Control Heuristics, Journal of Guidance,",
  "sdl_date": "2020-09-18T00:00:00",
  "countryPublished": "Guyana",
  "conference": "deforested Lenora cd Parvati",
  "originalAuthorName": "Artura s Lacatusu",
  "title": "granularity's Usenet democrat lash's",
  "declaredTags": "KPIs|shared aviation information|cost modeling|Air Traffic Control|machine learning",
  "releaseReason": "quarantined/prognostication",
  "docName": "TF_98_7624",
  "fundingCenter": 42,
  "resourceURL": "https://grounding's.com",
  "fundingDepartment": "fs35",
  "caseNumber": "12-9771",
  "publicationDate": "4/9/2017 12:00:00 AM",
  "releaseYear": 2008,
  "releaseStatement": "Other",
  "approver": "$Saliou $Wrisch",
  "handCarry": 7,
  "authorDivision": "ge35",
  "copyrightOwner": "Nouraddine Jakunov",
  "lastModifiedDate": "1/19/2011 12:00:00 AM",
  "releaseDate": "5/23/2006 12:00:00 AM",
  "onMitrePublicSrvr": 0,
  "projectNumber": "6460ONPR40",
  "materialType": "Book",
  "publicationType": "Paper",
  "authorCenter": 68,
  "originalAuthorID": "Weiqin",
  "mitrePublicServer": 0,
  "subjectTerminology": "Biological Sciences (General)",
  "dateEntered": "8/5/2014 12:00:00 AM",
  "documentInfoURL": "https://Jubal latest supersize Heidelberg incoherent.com",
  "softShell": 0,
  "publishedOnNonMITREServer": 0,
  "priorCaseNumbers": "CASE2: 18-2311|CASE2: 17-1719|CASE1: 15-3140|CASE1: 15-3140",
  "organization": "ap48",
  "authorDepartment": "xi16",
  "publicationYear": 2015,
  "sensitivity": "Public",
  "copyrightText": "(c) 2016 The MITRE Corporation All Rights Reserved",
  "fundingSource": "DHS FFRDC Contracts",
  "level1": "HR, Strat Comm & BD Ops/Dev",
  "fundingDivision": "absence refuse Dramamine's enjoyed embolism's",
  "publishedOutsideUSA": 0,
  "level3": "lq46",
  "level2": "vi47",
  "sdl_id": "5aeb1110402c49d5bdf3a19e4ddbe852",
  "text": "updates the appropriate model and reruns CSG to assess the impact of the changes. An overview of CSG is provided here. CSGs game formulation searches through the combinatorics of cyber incidents, attack paths, impacts, and defender method employments using Minimax. CSG is formulated as a two-player zero-sum game. As such it implements rational decision making, where both players work to best counteract each others moves. CSG assumes that the attacker knows about the system they are attacking. This is reasonable because CSGs focus is on defense employment for the long term, assuming that attackers will be able to learn about and may pursue targets over the lifetime of a system. Methods for trying to deceive, delay, or deter an attacker over the short term would motivate a different game formulation. Examples of different formulations are shown in [6]. The system metric in CSG is a system risk score. This score comes from computing the different impacts that an attacker can cause combined conditioned on the how difficult the system architecture and defenses makes it to cause those impacts (described later in this paper). In the game, the defender tries to minimize this value. A state in the game represents a configuration of the system, either with no defenses employed, or some status quo version of the system that one wants to improve. To compute the risk score for that state, for the attacker player generates an attack tree that looks multiple attack steps ahead to identify possible impacts. The leaf nodes of the attack tree provide an expected value (EV) computed from the impacts and the probabilities (as shown in Figure 5). The defender then employs defenses to reduce expected value of the impacts the attacker can cause, and the game proceeds in typical game tree fashion. Starting from the initial state it employs MiniMax, to assess move pairs of a defender action (min), and the attackers revised attack tree given the defender changes (max). The resultant game tree assesses how each defender method can best reduce the risk score. Since the employment of each defender method incurs a cost, the game is over when either the game identifies the optimal set of defense methods to use when the defender has spent the amount of money they have allocated, or when a complete portfolio analysis is performed to compute the Pareto frontier for each price point. Figure 1 demonstrates the output of CSG, where the cost and performance of each portfolio option is plotted. The red dots show the Pareto optimal portfolios. In this example, 55,296 defense portfolio options were considered. With no defenses the risk score was 8492934. With all the security methods applied, the risk was reduced to 2038408, for a cost of $250k. However, spending ~$39k, the risk can be reduced to 2779440. This represents 89% of the risk reduction for only 16% of the cost. Figure 1: Security Portfolio Effectiveness vs. Cost CSG requires four system models. A CMIA process model computes impacts. A system topology model describes the component interconnectivity, type and trust relationships. It contains a built- in (default) attacker model. Lastly, models of the defender methods are needed. Each of these models is described below. 2.1 Modeling Incident Impacts CSG uses CMIA process models to determine the consequence (losses) incurred from cyber incidents, and the CMIA software is embedded in CSG. CMIA makes it possible to capture mission details as an executable simulation. It models mission activities, ICT activities, activity durations, activity dependencies, ICT resources, temporal constraints, data, and control flows. ICT resources in the process model can be affected by cyber incident effects represented by the DIMFUI cyber incident effect taxonomy described in [7] and relates the occurrence of an effect to mission outcomes in the form of mission impacts. Figure 2 shows the CMIA tool displaying a Business Process Modeling Notation (BPMN) diagram, and shows some of the underlying details that turn the model into an executable simulation. It is outside the scope of this paper to describe CMIA in detail but for more information on the CMIA method and tool see [12] [9]. Figure 2: Process Model Showing Mission Activity Order and Control Flow Dependencies CMIA process models can be probabilistic and stochastic, allowing one to bound the uncertainties associated with the model. Running combinatorics on the set of cyber incident effects allows the criticality of cyber resources to be estimated [12] or validated by mission subject matter experts. CMIA also supports the assessment of multiple (simultaneous) incidents, allowing CSG to run through combinations of the possible cyber incident effects that will be assessed using MiniMax. 2.2 Modeling the Attacker CSG, provides a default attacker model that defines the probability that attacks will succeed given the topological constraints that the system imparts on the attacker. For the attacker to affect ICT resources that can cause impacts, the attacker must find a pathway to access them. The attack model conditions the probability of an attack succeeding with the following characteristics: - Whether the attacker is trying to compromise a component they can directly connect to, or whether it requires crossing a network trust boundary to access - Whether that component is the same type as one of the components that the attacker has already demonstrated they can compromise - Whether a component is known to be vulnerable to known exploits - Whether the component is a server that contains one or more network services - Whether user roles, who have access to each resource, can leverage those roles to access other components in the network to create impact Figure 3: Default Attack Model Figure 3 shows the probabilities of attacker success given topology relationships. If they first try and attack host Win 7-2 before attacking something else, the diagram shows that is it possible to attack the host from the outside with probability of success |. It also shows there is a probability in becoming an inside user or subverting an insider account, where the number of accounts N, will affect the risk \\n |. Once a host is compromised an attacker can compromise other resources on the devices with |. Once in, the attacker can try to attack other cyber resources of the same type as one of the components already compromised then the probability is P(S|STC). If its of a different type, then the attacker needs a new zero-day attack and has the probability |\\n. Throughout, whether the host is a client or a server will affect the probabilities. The probability of successfully navigating the network to compromise a cyber resource is computed using the chain rule shown in Equation 1. This attack model captures the basic security properties of segmentation, diversity, and least privilege and can be composed across multiple networks, trust, and segmentation boundaries. It mathematically credits a defender reducing the amount of access to components that can cause significant impacts, for diversifying components that can cause significant impacts when attacked in combination, it credits a defender for making it harder to reach the components that cause significant impacts , , , . , |, , . , , |, . , . . , | Equation 1: General Form of the Chain Rule 2.3 Modeling System Topology and Applying the Attack Model CSG computes impacts and then uses the attacker model to estimate the probability that the impacts will occur given the constraints of the system topology. The topology model includes cyber components, applications, data, user account groups, and access controls that enforce trust relationships. Model elements include single ICT resources as well as ICT resource pools that represent functionally identical groupings of resources of the same type. The model also requires resource type information for each ICT resource. This makes it possible to know when the same attacker exploit from an earlier step might be reused, and when it cant. The existence of connections, firewall rules, and the access of user roles define connectivity capabilities and restrictions between ICT resources. An example of a topology model is shown in Figure 4 Infrastructure components are in blue, applications and services are shown in green, and data elements are in yellow. User group populations are also included in the model, but the diagram does not show the trust relationships of who can communicate with who, that are also captured in the model. Figure 4: A Simple Topology Model for a Point of Sale System 2.4 Computing the Risk Score The topology model makes it possible to compute attack trees. This process is illustrated in Figure 5. The figure illustrates the complexity of analyzing even a simple four host system. All the mission impacts in the figure would be computed from a CMIA model of the system. The impacts shown include impacts from when multiple components are compromised. Even though the model in the figure contains only two subnets, the model represents a trust relationship from S1 and S2 to S4. The attack tree is then generated, using the attacker model to estimate the probability of attack steps",
  "updated_at": "6/19/2019 12:00:00 AM",
  "created_at": "1/19/2006 12:00:00 AM"
}