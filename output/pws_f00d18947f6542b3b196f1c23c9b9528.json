{
  "sdl_source_type": "PWS",
  "source_library": "SRC-overlord's",
  "file_name": "emitted.ext",
  "document_url": "http://waddedmultivariate.com",
  "uploaded_by": "Manjinder i Goti",
  "last_modified": "3/19/2019",
  "sdl_date": "2020-02-28T00:00:00",
  "countryPublished": "Turkmenistan",
  "conference": "Townes flu's ul Rahima",
  "originalAuthorName": "Charifa m ",
  "title": "bumpkin's removes marihuana's",
  "declaredTags": "deliver transformational solutions|CAMH|deaf|Functional Dependency Network Analysis|Simulation",
  "releaseReason": "conservative's/sis's",
  "docName": "PF_47_3785",
  "fundingCenter": 30,
  "resourceURL": "https://Francoise.com",
  "fundingDepartment": "ev59",
  "caseNumber": "54-5462",
  "publicationDate": "11/19/2020 12:00:00 AM",
  "releaseYear": 2005,
  "releaseStatement": "Advertising/Recruiting",
  "approver": "$Maravillas $Jubera",
  "handCarry": 6,
  "authorDivision": "wk16",
  "copyrightOwner": "Delfi Zumel",
  "lastModifiedDate": "4/22/2010 12:00:00 AM",
  "releaseDate": "1/18/2019 12:00:00 AM",
  "onMitrePublicSrvr": 0,
  "projectNumber": "1501TUTG33",
  "materialType": "Article",
  "publicationType": "Paper",
  "authorCenter": 28,
  "originalAuthorID": "Eryka",
  "mitrePublicServer": 0,
  "subjectTerminology": "Public Health (General)",
  "dateEntered": "12/8/2011 12:00:00 AM",
  "documentInfoURL": "https://Edmond's shads filth Chicana miscalculated.com",
  "softShell": 0,
  "publishedOnNonMITREServer": 0,
  "priorCaseNumbers": "CASE1: 17-3768|CASE1: 17-2336|CASE1: 18-0296",
  "organization": "py23",
  "authorDepartment": "nu48",
  "publicationYear": 2000,
  "sensitivity": "Public",
  "copyrightText": "(c) 2016 The MITRE Corporation All Rights Reserved",
  "fundingSource": "FAA MOIE",
  "level1": "MITRE Legacy",
  "fundingDivision": "wistfully corps's cub foxhound battered",
  "publishedOutsideUSA": 0,
  "level3": "wy19",
  "level2": "ua95",
  "sdl_id": "f00d18947f6542b3b196f1c23c9b9528",
  "text": "are many \\ntraffic simulator options, the Total Airport and Airspace Model \\n(TAAM), a highly reputable air traffic simulation package \\nowned by Jeppesen [9], was selected for this case study for its \\nmodeling capabilities in terminal airspace and its well-\\ndocumented API. Through its APIs, TAAM allows external programs during \\nruntime to control simulation progress (start, pause, end), to \\nobtain traffic status, and to input TFM actions (add/delete \\nflights, amend flight plan, implement RTAs for flights at fixes) \\n[10]. An SDDF-compatible interface software module called \\nTAAM SDDF Gateway was developed so that the runtime \\ncommunication with TAAM can be effected. C. Advanced Flight-Specific Trajectories (AFST) MITRE CAASD has developed a working prototype of \\nAFST, and it has been evaluated in several HITL experiments. \\nIt has sophisticated route evaluation/generation algorithms. \\nWith only minimal changes to the software, the AFST prototype \\nwas configured to plug into our TFM integration platform. In operational use, AFST will require user interactions and \\nfacilitates decision-making. A user would follow these steps: Identify constraints (e.g., severe weather): use AFSTs \\ntrajectory evaluation algorithms to search for \\nopportunities for rerouting affected flights Consider alternatives: construct and rank, via \\nquantitative measures, various feasible routes. Collaborate on proposed route revisions: negotiate and \\nseek consensus with dispatchers and controllers using \\nAFSTs computer-human interface. Execute revisions: once a new route is determined, \\ndistribute route update to air traffic control personnel for \\nreview and issuance to pilots via AFSTs interface. Since this case study is focused on integration policy, and \\nnot on human factors, the human decisions to be made with \\nAFST can be simulated with are parameterization. For example, \\nthe route selection process is simulated by selecting the top-\\nranked route from the feasible ones generated by AFSTs \\nalgorithms. Parameterizing human decisions this way allows \\nAFST to run in a fast-time simulation mode. The AFST prototype software is compatible with \\nSDDF/SimBuilder, so there was no additional interface to be developed. The only change required was to subscribe to flight \\ntrack data from TAAM. During runtime, AFST automates the \\nreroute decisions and publishes its reroute messages. D. TBFM Scheduler The functionality of TBFM in this case study is to provide \\nthe STAs at the MFs. To simulate this functionality without \\naccess to the actual (proprietary) TBFM software, a scheduling \\nsoftware to mimic TBFM functionality was developed. This \\nsoftware application takes into account site adaptation data (e.g., \\nairways, fixes, and airport runways), aircraft separation matrix, \\nand flying time estimates to generate a schedule and assign \\nflights STAs. During simulation runtime, the scheduler subscribes to the \\nTAAM-published estimated times of arrival (ETA) at the MFs, \\nthen calculates and publishes the schedule of STAs. E. Integration Policy Module The Integration Policy Module governs how the AFST \\nprototype, TBFM scheduler, and TAAM communicate, and the \\nmodule implements a set of policies/rules to model the \\ninteractions between simulation components. The following \\ndefines how AFST and TBFM should interact: AFST sends flight reroutes which avoid en route \\nweather. TAAM implements AFST reroutes, and updates the \\nETAs to MFs. The TBFM scheduler receives the updated ETAs, and \\nrevises the metering schedule when needed. TAAM receives the updated metering schedule and \\ndelivers the flights pursuant to STAs at the MFs, \\nmeeting the schedule times to the extent possible: with \\nspeed changes (subject to the airframe performance \\ncharacteristics), or by executing vectors or holding. No change in STA is allowed after flights cross the FH. F. Summary Figure 3 is a screenshot of SimBuilders user interface, \\nillustrating the models/services in the proposed platform running \\nin the Linux environment. Not shown on the screenshot is the \\nTAAM application, which is running on an external Windows \\nmachine and connecting to the simulation platform via the \\nTAAM SDDF Gateway. In Fig. 3, in the center is the Integration Policy Module. \\nDuring the execution of a simulation, it passes flight positions to \\nAFST, and MF ETAs to the TBFM modeling component. For \\nexample, a pre-specified condition might be that once a flight \\ncrosses the FH, its ETA update will not be sent to TBFM (since \\nwe want the original STA to be achieved). Likewise, the \\nIntegration Policy Module passes STAs and reroute messages to \\nTAAM. TAAM will model the reroutes and apply these to the \\nappropriate flights (as flight plan amendments). TAAM will \\nthen execute the STAs as RTAs to deliver the flights to MFs as \\nclose to the STAs as possible. Figure 3. Connecting Simulation Modeling Components in a Time-Synchronized, Discrete Event Simulation Platform for TBFM/AFST Integration Study V. SIMULATION EXPERIMENT A. Scenario Setup An experiment was designed to simulate an operational \\nscenario with arrivals flows in severe weather, using the AFST \\nprototype and TBFM scheduler components for TFM \\nfunctionality. The terminal airspace of George Bush Intercontinental \\nAirport (IAH) at Houston, Texas was selected for the study area. \\nThe weather data were taken from July 25, 2016, wherein \\nconvective activity and thunderstorms were present near IAH \\nfrom 18:00Z to 22:00Z. The weather did not block the MF \\ncompletely and neither did it significantly impact arrival runway \\ncapacity, meaning that TBFM could potentially still operate. The traffic data were taken from December 2, 2015, which \\nwas a clear weather day for IAH. There were 198 arrivals and \\n200 departures scheduled for the period of 18:00Z to 22:00Z. By \\nusing clear-weather traffic, the simulation modeling elements \\nare able to modify flight paths for weather when needed. The scenario assumes that TBFM arrival metering will \\nremain active, and AFST will generate weather-avoidance \\nreroutes for individual flights based on forecast weather before \\nthe flight crosses the FH. Figure 4 shows the seven MFs (in \\ngreen) used in this scenario, (i.e., RIICE, ZEEKK, MPORT, \\nGMANN, LINKK, DOOBI, and SUUNR). The FHs for jet \\naircraft are about 190 to 250 NM away from the MFs. The \\nmovement of the weather was from southeast to northwest. Figure 4. IAH Airspace, Meter Fixes, and Weather at 19:00Z on July 25, 2016 B. Experiment Results The simulation experiment started by launching all the \\nmodeling components (i.e., SimBuilder, TAAM, AFST, TBFM, \\nand the Integration Policy Module). Once SimBuilder confirmed \\npositive connection statuses, it advanced the simulation clock in the step size of one second. When all the modeling components \\nfinished their respective computations for this time, SimBuilder \\nadvanced another one-second step. This process was repeated \\nuntil the end of the simulation time. SDDF provided the publish \\nand subscribe services so that each modeling component could \\ndisseminate and receive data during runtime execution. The speed of this simulation was 1.2 to 4 times faster than \\nwall-clock time, depending on the number of active flights in the \\nsimulation, i.e. the more the active flights, the more the weather \\navoidance problems the AFST prototype solves simultaneously. \\nAfter the end of the simulation, the results were compiled from \\nthe log files of the modeling components. As the simulation progressed, there were 22 weather-\\navoidance reroutes identified and published by AFST, and \\nTAAM applied these to the affected flights. The total extra \\ndistance due to AFST reroutes was 361 NM, an average of about \\n16 NM per flight. Regarding meter time conformance, the total \\ndeviation between the STAs and the actual arrival times at the MFs was 586 seconds for the 198 arrivals, an average of 3 \\nseconds per flight. The source of the deviation is mainly from \\nthe flight merging and maneuvering activities in TAAM. Table I illustrates for a particular flight (UAL21) the event \\nmessages exchanged among simulation components in the \\nruntime execution. This flight departed per TAAM at 17:22:00 \\nand was scheduled to cross MF DOOBI at 19:42:28. Its original \\nplanned route is shown (in light blue) in Figure 5(a). Before its \\npath reached the FH, AFST detected a weather blockage risk, so \\nAFST issued a new route at 18:24:03. This new route, shown in Figure 5(b), avoided the weather \\nand was routed to an alternate MF, MPORT. The ETA to the MF \\nthen became 19:58:41, which was estimated by TAAM using the \\nnew route. TBFM used this ETA to calculate an STA with the \\nsame time (indicating no additional delay was needed for this \\nflight). At time 19:35:08, TBFM froze the STA of UAL21. At \\n19:58:42, TAAM delivered the flight to the MF. TABLE I. TIMELINE OF SIGNIFICANT EVENTS FOR FLIGHT UAL21 Sim Time (hh:mm:ss) Acting Module Event or Action 00:00:00 TAAM Creates a new flight UAL21, scheduled to depart 17:22 on a flight plan [KBUF..EWC..FLM..BWG..SQS..AEX..JERNY..BEATL..DOOBI..SKNRD..KIAH] 17:21:59 TAAM Creates a route event of UAL21 17:22:00 TAAM Departs UAL21 from the origin airport 18:13:58 TAAM Publishes the ETA to MF (DOOBI) of UAL21 as 19:41:35 18:14:00 TBFM Schedules UAL21 to MF (DOOBI) at 19:42:28 18:14:00 TAAM Accepts the request to deliver UAL21 to MF (DOOBI) at 19:42:28 18:24:03 AFST Publishes a reroute event of UAL21 18:25:11 TAAM Accepts and amends the flight plan of UAL21 [BWG.SQS.EIC.LFK.LOA..MPORT..KIAH] 18:23:58 TAAM Publishes the ETA to MF (MPORT) of UAL21 as 19:58:41 18:25:01 TBFM Schedules UAL21 to MF (MPORT) at 19:58:41 18:25:01 TAAM Accepts the request to deliver UAL21 to MF (MPORT) at 19:58:41 19:35:08 TBFM Freezes the STA of UAL21 to MF (MPORT) 19:58:42 TAAM",
  "updated_at": "3/23/2017 12:00:00 AM",
  "created_at": "9/7/2014 12:00:00 AM"
}