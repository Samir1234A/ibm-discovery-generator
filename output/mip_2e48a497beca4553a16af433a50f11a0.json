{
  "sdl_source_type": "MIP Projects",
  "chargeCode": "ssk",
  "longName": "ffihewnbxi-8211",
  "endDate": "2014-05-12T00:00:00",
  "phonebookDisplayName": "Gicu Pontovich",
  "startDate": "2002-03-13T00:00:00",
  "status": "Active",
  "portfolios": "profiteer|democratization|Chadwick's|Ã©clair's|lynx",
  "name": "commissioner breastworks",
  "public_url": null,
  "project_url": "http://flabbiness's.com",
  "sdl_date": "2020-07-12T00:00:00",
  "countryPublished": "Tanzania",
  "conference": "Pocono Buddhism oy Yorlady",
  "originalAuthorName": "Aydee u Volonte",
  "title": "footwork's repercussion",
  "declaredTags": "functional relationships|software development|backflash photons|patient-generated data|streamline communications",
  "releaseReason": "polio/rightful",
  "docName": "DL_71_2824",
  "fundingCenter": 53,
  "resourceURL": "https://berm.com",
  "fundingDepartment": "ga16",
  "caseNumber": "61-7807",
  "publicationDate": "1/12/2018 12:00:00 AM",
  "releaseYear": 2016,
  "releaseStatement": "MITRE External Publication",
  "approver": "$Treena $Radolff",
  "handCarry": 1,
  "authorDivision": "vh63",
  "copyrightOwner": "Chaker Dragert",
  "lastModifiedDate": "3/20/2007 12:00:00 AM",
  "releaseDate": "10/6/2007 12:00:00 AM",
  "onMitrePublicSrvr": 0,
  "projectNumber": "1920BSWP66",
  "materialType": "Book",
  "publicationType": "Article",
  "authorCenter": 93,
  "originalAuthorID": "Clemens",
  "mitrePublicServer": 0,
  "subjectTerminology": "Systems Engineering (General)",
  "dateEntered": "7/23/2007 12:00:00 AM",
  "documentInfoURL": "https://design's satyrs wrongly knells retina.com",
  "softShell": 0,
  "publishedOnNonMITREServer": 0,
  "priorCaseNumbers": "CASE3  17-2945|CASE4  14-0961|CASE1: 10-4072",
  "organization": "wl67",
  "authorDepartment": "xa67",
  "publicationYear": 1992,
  "sensitivity": "Public",
  "copyrightText": "(c) 2016 The MITRE Corporation All Rights Reserved",
  "fundingSource": "International Contracts",
  "level1": "MITRE Legacy",
  "fundingDivision": "sniggers counters multiplicative spark Drano",
  "publishedOutsideUSA": 0,
  "level3": "cx33",
  "level2": "ve70",
  "sdl_id": "2e48a497beca4553a16af433a50f11a0",
  "text": "jijvijiv ij }:{}:{\\n)( \\n >>\\n= I\\n (12) A mutual proximity reweighting for the Delaunay example from Fig. 2 is presented in Fig. 9. Counting exercises on large datasets can be computationally expensive, therefore we wish to find efficiencies wherever possible. For example, if we assume independent codensity distributions, then mutual proximity can be easily calculated via the product of the marginal distributions as ,)()()( jijijiijI PPMP >>= (13) where the subscript I indicates independent marginal distributions. Independence did not adversely affect results on standard machine learning datasets in [28]. Similar tests on HSI data are discussed in Section IV. Euclidean distance is approximately normal due to the central limit theorem if features (bands) are generated from independent and identically distributed data (i.i.d.) [37]. Whereas most data is not i.i.d., Schnitzer et al. [28] point out this approximation increases in accuracy with increasing intrinsic dimensionality. The empirical distribution may always be used if the data are not reasonably modeled by an analytical distribution, but at the expense of computation time. The computational complexity of mutual proximity is pGh due to the evaluation of all pairwise distances and \\nintersections. Rescaling takes additional time, but if we can assume the marginal distributions follow a functional form, we can use a pixel subset, S, to estimate the distributional parameters (o G). This reduces the number of rescaling \\ncalculations to S*n, resulting in linear rescaling complexity. IV. GRAPH CONSTRUCTION PERFORMANCE We examined the performance of many graph construction techniques described in Sections II and III to determine which algorithms best preserve community structure of the data by answering four questions. Which method is best for symmetrifying adjacency (or \\naffinity) matrices: mutuality or symmetry? Are spectral-density based adaptive construction \\ntechniques better than fixed neighborhood sizes for the same number of edges? Does edge reweighting after edge selection improve \\nthe community structure of neighborhood lists? Does prescaling primary metrics prior k-NN graph \\nconstruction improve performance? Algorithms described for instructional purposes only were not evaluated. A. Metrics A simple majority-rules k-NN classification is used to test the performance of each graph construction technique and a summary confusion metric representing the percentage of incorrect class assignments is reported for each combination of image and graph type5. Ties were broken by assignment to the class with the shortest distance from the test pixel. Whereas this metric establishes summary classification \\n5 We use the k-NN classifier as a metric indicating the health (or uniformity) of k-NN lists, not to achieve the best absolute classification accuracy. Fig. 8. The probability a random node with a given distance is closest to node i is given by the shaded area to the right, so node j, with ? = x b units \\nfrom node i has a mutual probability of ~83.3%. Fig. 9. Mutual proximity rescaling of Delaunay triangulation from Fig. 2. Notice the stronger relationship between intracluster nodes and weaker relationships between intercluster nodes. IEEE TRANSACTIONS ON GEOSCIENCE AND REMOTE SENSING, VOL. xx, NO. yy, MONTH 201x. DOI:xxxx Approved for Public Release; Distribution Unlimited. Case Number 16-3868 \\n 11 performance for each graph construction technique, it shows limited difference between algorithms starting with the same set of initial edges, i.e., many of the adaptive techniques discussed in Sections II and III start with an ANN graph. As such, their k-NN lists are identical so their majority-rules scores are the same (tie results may differ based on the metric). The only difference between these graphs are the edge weights after post processing, so these are referred to as edge reweighting schemes and produce secondary weights (metrics). To circumvent this problem, an additional test examines the structure of the k-NN list themselves. The simplest form of this test assigns a score to each nearest neighbor (j) based on its rank in pixel is k-NN list as 8 \\nE\\\"G8 + 1, . The rank-based pixel scores are summed \\nand normalized to produce values in the interval 0, 8. \\nScaling to 8 ensures pixels with high similarity to many \\nneighbors are given more weight than pixels with high similarity to small number of neighbors. Edge reweighting methods such as ZMP, MP, and SNN reshuffle the order of k-NN lists such that spectrally similar pixels more aligned with the density of the test pixel move closer whereas those in regions of differing density move farther away. As such, the above metric characterizes reshuffling by increasing the overall score when pixels of the same class as the test pixel move to lower ranks (closer to the test pixel) and dissimilar pixels move to higher ranks (farther away). While intuitively appealing, the metric does suffer from a shortcoming related to use of integer ranks. Two pixels that change ranks due to extremely small differences in their secondary edge weights will be assigned disproportionate changes in score due to integer ranking. Additionally, the metric is insensitive to the case when pixels change weights dramatically, but retain their current ranking. To combat both disproportionate changes in scoring or lack of changing ranks, an additional step is taken during metric construction. The first and last scores (ranks) are locked at the number of neighbors for the test pixel 8, and one \\nrespectively. All pixels that fall in between are interpolated to their floating-point positions in rank space spanned by the first and last pixels. This interpolated rank is then used as the pixel score. In this way, pixels that change rank due to small differences in secondary weights are assigned scores that are virtually identical. This adjusted rank metric also handles the case when pixels retain their original rankings but shift relative to the test pixel, changing their resultant scores even though the ranks are unchanged. The improved (adjusted rank) metric is illustrated in Fig. 10 for a pixel with 19 neighbors. As can been seen in Fig. 10, the adjusted rank scores of the two leftmost pixels are virtually the same because their distances from the pixel of interest are nearly identical. This is not true of the rank-only metric that shows an integer separation in score. Additionally, there appears to be a separation between nearest neighbors into at least two clusters. Those in the cluster closest to the test pixel are assigned much larger relative weights than those pixels appearing to the right of the apparent cluster division (bars indicate the magnitude of the difference). Note that this metric is appropriate for NN lists of the same size, so this will only be used for the edge reweighting tests. A simpler neighborhood health metric that overcomes the requirement for the same sized NN lists is the y-edge ratio, \\ndefined as the number of edges between vertices with differing class labels normalized by the number of edges in the graph [39]. Lower scores are thus indicative of more uniform NN lists. This metric is good for measureing changes in global k- NN health from prescaling tests as it quantifies the change in number of edges to similar pixels without being influenced by weighted ranks as above, which can be problematic comparing NN lists of differing sizes for the same pixel, e.g., ANN with prescaled metrics. Additionally, one may simply count the number of pixels with improved neighborhood health scores from any metric. While not indicative of the degree to which any edge weight changed, this metric gives a good indication of the number of pixels impacted by reweighting or rescaling schemes. \\nFig. 10. Rank-based and adjusted rank metric for evaluating the structure of k-NN lists. Notice that integral rank-based adjustments artificially increase node separation between the first two pixels, whereas fractional positions achieve weightings in line with node separation indicated by the distance metric. IEEE TRANSACTIONS ON GEOSCIENCE AND REMOTE SENSING, VOL. xx, NO. yy, MONTH 201x. DOI:xxxx Approved for Public Release; Distribution Unlimited. Case Number 16-3868 \\n 12 B. Data Several datasets with substantial ground truth coverage acquired from the Purdue Multispec website [35], the Telecommunications and Remote Sensing Laboratory, Pavia University via the Grupo de Inteligencia Computacional (GIC) University of Pas Vasco, Spain website [36], and the National Institute of Standards and Technology (NIST)-Mitre Corporation partnership [38] were used for the performance evaluation (Table I). Atmospheric absorption bands were removed from all airborne datasets prior to evaluation. Some images were subsetted around regions of dense ground truth coverage to avoid unneeded calculation or reduced in scale by nearest neighbor resampling to increase spatial diveristy. An example data set and associated ground truth map are shown in Fig. 11(a) and (b) respectively. Unclassified ground truth pixels are not evaluated, but pixels assigned to the unclassified class by the k-NN classifier are. Graph construction methods are penalized for this occurrence despite the fact these could be correct classifications, i.e., it is possible unclassified pixels are the same material as the test pixel, but are simply not recorded in the ground truth map. The number of pixels assigned to the unclassified class is algorithm dependent, so those pixels are included to ensure a consistent metric. C. Results We present several studies addressing the",
  "updated_at": "4/22/2010 12:00:00 AM",
  "created_at": "7/30/2008 12:00:00 AM"
}