{
  "sdl_source_type": "PWS",
  "source_library": "SRC-Kris's",
  "file_name": "Edith's.ext",
  "document_url": "http://ruffsorganist's.com",
  "uploaded_by": "Sally n Bechtold",
  "last_modified": "7/6/2002",
  "sdl_date": "2020-11-08T00:00:00",
  "countryPublished": "Denmark",
  "conference": "hematologists poignant mk Olmedo",
  "originalAuthorName": "Acoydan m Diamond",
  "title": "quarry",
  "declaredTags": "integrated architectural model|Captioner|ERM|personally identifiable information|early career opportunity",
  "releaseReason": "declamation/Kyoto's",
  "docName": "KG_73_9457",
  "fundingCenter": 88,
  "resourceURL": "https://imprisons.com",
  "fundingDepartment": "mx53",
  "caseNumber": "52-9415",
  "publicationDate": "1/3/2018 12:00:00 AM",
  "releaseYear": 2006,
  "releaseStatement": "Peer-reviewed Publication/Journal",
  "approver": "$Cordelia $Ipach",
  "handCarry": 2,
  "authorDivision": "uj72",
  "copyrightOwner": "Aline Milner",
  "lastModifiedDate": "9/10/2009 12:00:00 AM",
  "releaseDate": "4/26/2010 12:00:00 AM",
  "onMitrePublicSrvr": 0,
  "projectNumber": "1607QFQE35",
  "materialType": "Paper",
  "publicationType": "Paper",
  "authorCenter": 78,
  "originalAuthorID": "Enache",
  "mitrePublicServer": 0,
  "subjectTerminology": "Communications Services",
  "dateEntered": "3/20/2004 12:00:00 AM",
  "documentInfoURL": "https://realms linkups convenient naysayer frailest.com",
  "softShell": 0,
  "publishedOnNonMITREServer": 0,
  "priorCaseNumbers": "CASE1: 18-0935|CASE2: 17-2450|CASE2: 17-2450",
  "organization": "vt58",
  "authorDepartment": "ts67",
  "publicationYear": 2001,
  "sensitivity": "Public",
  "copyrightText": "(c) 2016 The MITRE Corporation All Rights Reserved",
  "fundingSource": "International Contracts",
  "level1": "MITRE Public Sector",
  "fundingDivision": "discontinuity's reggae imperfection's hyper uniting",
  "publishedOutsideUSA": 0,
  "level3": "np11",
  "level2": "ya91",
  "sdl_id": "39367bd094f841679be318cf1a6e6651",
  "text": "    \"text\": \" Paper Title (use style: paper title) Approved for Public Release; Distribution Unlimited. Public Release Case Number 19-2029 This technical data was produced for the U. S. Government under Contract No. FA8702-19-C-0001, and is subject to the Rights in Technical Data-Noncommercial Items Clause DFARS (FEB 2014) DNS Tunneling Detection with Supervised Learning Richard Preston The MITRE Corporation, Bedford, MA and Tufts University, Medford, MA rhpreston@mitre.org AbstractThis paper presents an advanced analytic capable of detecting general DNS tunneling behavior with high precision and recall. It explores the application of supervised machine learning to a recently introduced technique for analyzing DNS traffic: classifying primary domains instead of queries. This approach is enabled by a partially synthetic dataset generated with a structurally configurable DNS tunneling tool. KeywordsDNS, DNS tunneling, threat detection, data analytics, machine learning, traffic generation I. INTRODUCTION The Domain Name System (DNS) is commonly referred \\nto as the phonebook of the Internet. When you type \\nwww.ieee.org into your browser, a query is sent to a DNS \\nresolver to determine the location, or IP address, of the \\ndomain. This happens for most online activity, and therefore, \\nDNS traffic is prevalent on all networks that connect to the \\nInternet. Unfortunately, the DNS protocol is fraught with \\nsecurity vulnerabilities, and efforts to fix the 1980s technology \\nhave largely failed [1]. According to a recent survey, 33% of \\norganizations suffered data theft via DNS in 2018, costing an \\naverage of $715,000 per incident [2]. The combination of a \\ncolossal legacy system and sophisticated evolving threats \\nmeans more advanced approaches are needed to protect \\nenterprises from attackers. One of the most glaring and difficult problems with the \\nDNS is that it can be hijacked to transmit arbitrary data. The \\nDNS does not consist of a single database of all the IP \\naddresses in the network. Instead, it is a distributed, dynamic \\nsystem allowing new domains to be registered as they come \\nonline. This means that it is trivially easy to add a new name \\nserver that you control to the system. For example, if you \\nregister the domain evil.com, then any new queries to \\n<subdomain>.evil.com will be directed to your server. \\nThen, any computer in the world can send a message to you \\nby making a DNS query with the data encoded in the \\nsubdomain field. The server can respond with any resource \\nrecord, including IP addresses or arbitrary text. Fig. 1 \\nillustrates this threat, which is known as DNS tunneling. Over the last decade, academic and industry research has \\nproduced techniques for identifying and responding to DNS \\ntunneling [3]. However, detection of evasive protocols has \\nproven difficult and is only now being integrated into \\ncommercial devices and software, where the design is often \\nobscured, and the solutions can be prohibitively expensive. In \\nJune 2018, Nadler et al. introduced a new approach that \\nenables detection of low-throughput data exfiltration over \\nDNS [4]. The work presented here reproduces and extends \\ntheirs by applying supervised machine learning to similar \\nstatistical features extracted from a partially synthesized \\ndataset representing a broad spectrum of DNS tunneling protocols. This effectively improves the precision and recall \\nof the classifier without overfitting to a particular malware \\nfamily. II. APPROACH A. Background The challenge in detecting DNS tunneling behavior in \\ngeneral is that each malware family may behave differently, \\nusing its own application-layer protocols and performing a \\ndistinct set of activities. However, there are three common \\nthreads: 1. Malicious actors use DNS tunneling to transmit \\ninformation. 2. The outgoing information is encoded in the \\nsubdomain field of the DNS queries. Fig. 1. Simplified example of how DNS tunneling can be used as a \\ncommunication channel. Note the outgoing data payload is contained in the subdomain field of the DNS query. 3. Two or more queries that are part of a transmission \\nbetween a client and server must contain the same \\nprimary domain (e.g. evil.com). Obviously, statistical metrics highlighting information \\ncontent of DNS queries are informative, but the salient \\ningenuity of Nadler et al. comes from an understanding of \\npoint 3. They proposed that the queries be first grouped by \\nprimary domain, and then features extracted from the list of \\nsubdomains contained in each group. In other words, attempt \\nto classify malicious domains instead of malicious queries. \\nFraming the problem this way grants more flexibility in the \\nmachine learning features that can be extracted, as discussed \\nin the next section. B. Machine Learning Features 1) Character Entropy: Information (Shannon) entropy as shown in (1) applied to the subdomains taken as a string of characters. = \\n \\n \\n (1) \\n is the normalized frequency of \\n in , or the number of occurrences of \\n in divided by the number of elements in . In this case, is the concatenation of the \\nsubdomain fields for a given list of queries grouped by primary domain, and is the set of characters seen therein. This feature is intended to measure information content, and therefore domains involved in DNS tunneling are expected to exhibit a higher character entropy. 2) Alphanumeric Content Ratio: The number of lowercase alphabetic or numeric characters (the characters officially sanctioned in the DNS protocol) in divided by the number of characters in (where is as specified in Character Entropy). Normal DNS traffic should only use alphanumeric characters, so this feature may highlight odd behavior such as the use of base64 encoding. 3) Unique Query Volume: The number of unique queries in the group, normalized with (2), where x is the unique query volume, and c is equal to 20. = 1 \\n\\n (2) The more queries are sent, the more information can be transmitted. Therefore, a high unique query volume may correlate with DNS tunneling. 4) Unique Query Ratio: The number of unique queries divided by the total number of queries in the group. For typical use of DNS, identical queries may be made over time to access the same resources repeatedly. With DNS tunneling, the queries are expected to vary in order to transmit new data and to prevent DNS caching. 5) Average Subdomain Length: The average number of characters (bytes) in the subdomains, normalized with (2), where x is the average subdomain length, and c is equal to 50. The longer the subdomain is, the more data can be encoded therein. 6) Average Longest Meaningful Word Length Ratio: The longest meaningful word length ratio is the length of the longest English word contained in a string divided by the length of the string. This was computed for each subdomain in the group, and the average was taken as the feature. Typical normal subdomains are English words, but those used for DNS tunneling are not likely to be meaningful to a human. 7) Average English Content Ratio: The intention of this feature is to estimate the proportion of characters in the subdomains that compose English words, and therefore are unlikely to be used for data transmission. The heuristic in Fig. 2 was used to determine the English Content Ratio (ECR) of each subdomain. The feature was taken as the average ECR over all the subdomains in the group. 8) Average Similarity Ratio: The similarity ratio between two strings is the number of characters they share divided by the number of characters in total. For example, the simality ratio between abcd and cdef is 0.5. Note that only non- overlapping matching subsequences are considered when counting shared characters. For example, the ratio between abcd and cdab is still just 0.5. Rather than compute this for every pair of subdomains in the group, a sliding window approach was used. For each subdomain, the average of the similarity ratios between it and the subsequent N subdomains in the list were taken. (In the trials discussed in this paper, N=20.) These values were averaged to obtain the feature. This is perhaps the most interesting statistic, because it gets to the heart of the difference between normal use of DNS, where subdomains follow some easily-recognizable pattern, and DNS tunneling, where each subdomain represents a data transmission packet and may be totally unrelated to others under the same primary domain. C. Normal DNS Data The University of Southern Californias LANDER project annually collects large volumes of Internet traffic as part of their Day in the Life of the Internet effort [5]. A sample of DNS queries requesting A, AAAA, and TXT records was taken from their 2018 dataset to represent normal DNS behavior. To mitigate the concern that the sample may be contaminated by a small portion of DNS tunneling traffic, anomalies were filtered out with an Isolation Forest classifier 1 algorithm ECR is 2 input: string S 3 output: number that is the ECR of S 4 5 M := predefined minimum word length 6 L := length of S 7 while True do 8 W := longest meaningful word in S 9 if length of W is less than M break 10 remove W from S 11 return 1 (length of S) / L \\nFig. 2. Greedy algorithm implementing ECR approximation. This",
  "updated_at": "2/22/1994 12:00:00 AM",
  "created_at": "4/30/1998 12:00:00 AM"
}