{
  "sdl_source_type": "PRC",
  "sdl_date": "2020-08-24T00:00:00",
  "countryPublished": "Croatia",
  "conference": "Liechtenstein mildewed kf Arselina",
  "originalAuthorName": "Yanli r Bergas",
  "title": "excretion's Bessie radius goggle's",
  "declaredTags": "low earth orbit|agile|land use",
  "releaseReason": "lunged/exhibiting",
  "docName": "YX_64_4936",
  "fundingCenter": 22,
  "resourceURL": "https://Trotsky's.com",
  "fundingDepartment": "yu84",
  "caseNumber": "56-4017",
  "publicationDate": "11/28/2020 12:00:00 AM",
  "releaseYear": 2000,
  "releaseStatement": "Conference/Workshop",
  "approver": "$Aymar $Benk",
  "handCarry": 0,
  "authorDivision": "pr60",
  "copyrightOwner": "Kulvir Mittenzweig",
  "lastModifiedDate": "1/27/2016 12:00:00 AM",
  "releaseDate": "6/16/2011 12:00:00 AM",
  "onMitrePublicSrvr": 0,
  "projectNumber": "7917QFOB44",
  "materialType": "Article",
  "publicationType": "Book",
  "authorCenter": 77,
  "originalAuthorID": "Ananda",
  "mitrePublicServer": 0,
  "subjectTerminology": "Government Agency Operations (General)",
  "dateEntered": "5/22/2001 12:00:00 AM",
  "documentInfoURL": "https://baroness recharges sleeplessness howitzer chopper.com",
  "softShell": 0,
  "publishedOnNonMITREServer": 0,
  "priorCaseNumbers": "CASE1: 17-4622|CASE1: 17-2739|CASE1: 15-3140",
  "organization": "kn14",
  "authorDepartment": "qk62",
  "publicationYear": 1990,
  "sensitivity": "Public",
  "copyrightText": "(c) 2016 The MITRE Corporation All Rights Reserved",
  "fundingSource": "Independent Effort",
  "level1": "Corporate Ops & Transformation",
  "fundingDivision": "recorded move's Marcelo's tamped roods",
  "publishedOutsideUSA": 0,
  "level3": "cg52",
  "level2": "ym86",
  "sdl_id": "eb0d74e913434ec2b24035555fd92c0c",
  "text": "on utilization, particularly for the GitLab Runner instances. If Reserved Instances are used, stopping instances has no useful application since Reserved Instances are billed regardless of their usage. In contrast, On-Demand Instances can be stopped and started with no additional charges incurred. See Error! Reference source not found. for a complete evaluation of when instances are billed. Stopping instances can be done programmatically through an API, and likewise can be started again through an API which allows for the entire stop-and-restart procedure to be automated. When an instance is stopped and restarted, it has the ability to retain its private IPv4 address, which means an Elastic IP address associated with the private IPv4 address will remain preserved for each instance after a stop-and-restart procedure. If appropriate, workloads could be batched to run at scheduled times during the day when the Gitlab Runners are active. Alternatively the Gitlab Runners could be started when the script detects and incoming workload and automatically turned off when the workload is complete. \\nTable 6 Cost of a Single GitLab Runner Instance Type Compute Cost Storage Cost Total c5.large $74.67 $23.76 $98.43 The cost of a single Gitlab Runner is an estimated $98.43 per month, with the majority of the cost coming from the compute cost (i.e., when the instance is running). If the instances are only used for 2 hours a day, stopping the instances could reduce the compute cost of each Gitlab Runner by 92%, or $68.71 per month. When applied to each of the 20 Gitlab Runners, this strategy could result in a total savings of $1,374.20 per month. 01600 Category 1Runners with AutoscalingCurrent Autoscaling 29 6.2.4 AWS Organizations and Consolidated Billing The use of AWS Organizations allows organizations with multiple accounts, such as government organizations, to consolidate billing to a single dashboard, while also taking advantage of volume discounts for services including EC2 and S3. For billing purposes, AWS treats all the accounts in the organization as if they were one account. It is recommended to consider the adoption of AWS Organizations to take advantage of volume discounts and potentially simplify the billing process. At a minimum, the Consolidated Billing features will provide greater insight to organizational costs of running on GovCloud. 6.3 Cost Management By using Cost Explorer and Cost and Usage Reports in conjunction with organizations, the PMO can easily view and track detailed account-specific spending reports. By utilizing the Cost Optimization Monitor with Kibana dashboards, the team can search and visualize this cost data. To reduce time spent manually monitoring these reports and ensure the team is alerted when thresholds are reached that may lead to unexpected spending, AWS Budgets should be implemented with AWS Organizations so the team can push account-specific alerts to team members through email, Slack, or Amazon Chime. To automatically respond to changes in spending, CloudWatch should be used to trigger workflows such as auto-scaling EC2 instances based on changes in resource demand. Beyond implementing these measures for cost management, the team should also opt into the free Trusted Advisor notifications feature to receive weekly notification emails with updates on potential savings specific to the program architecture for continuous improvement in the future. 30 Conclusion and Next Steps \\nWith an increasing number of emerging Government IT systems being deployed in the cloud, and legacy systems migrating to the cloud, it is vital to architect these systems in a fashion that leverages the scalable nature of the cloud and capitalizes on the opportunities offered by cloud services. There are a number of important design considerations, cost management tools, and programmatic best practices that should be considered when architecting a program in GovCloud or other cloud platforms. The successful implementation of the tools and practices outlined in this report can significantly reduce the cost of running workloads in the cloud, which was conceptually demonstrated in an evaluation of a standard DevSecOps GovCloud account. \\nA cloud centric deployment of both new systems, and legacy applications being migrated to the cloud, often requires the support and guidance of the PMO to enable greater integration of cloud native services. Often times when deploying both new and legacy systems to the cloud, precedence is given to ensuring the systems are operational, with other considerations such as resource and cost optimization occurring after. When deploying new applications to the cloud, it is recommended that the PMO considers applying optimization strategies such as the ones outlined in this report. Legacy systems which are migrated to the cloud should also be reviewed for potential cloud efficiencies as appropriate. The most impactful efficiencies and cost strategies discussed in the report include utilizing AWS Organizations to consolidate billing and volume discounts, identifying long-term workloads which can benefit from Reserved Instances, identifying fluctuating workloads which can benefit from Auto-Scaling groups, applying lifecycle management configurations for S3 storage, and monitoring environments with AWS native cost management tools. 31 Appendix A References AWS GovCloud o https://aws.amazon.com/govcloud-us/ o https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/welcome.html Figure 4 S3 Object Mobility o https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general- considerations.html \\n Error! Reference source not found. o https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html Figure 7 Cost Optimization Monitor architecture o https://aws.amazon.com/solutions/cost-optimization-monitor/ DevOps o https://www.business2community.com/cloud-computing/how-to-use-9-cloud-\\ndevops-best-practices-for-cost-control-02163854 Lean Culture o https://theleanway.net/The-Five-Principles-of-Lean Business Process Re-engineering o https://www.ijcaonline.org/archives/volume44/number23/6424-8653 o https://www.inteqgroup.com/blog/6-key-business-process-reengineering-steps Figure 10 Relationship Between Regions and Availability Zones o https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-\\nzones.html Security at Scale: Logging in AWS o https://d0.awsstatic.com/whitepapers/compliance/AWS_Security_at_Scale_Logging\\n_in_AWS_Whitepaper.pdf Laying the Foundation (1/7) o https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-laying-the-\\nfoundation/introduction.html Cost Management in the AWS Cloud (2/7) o https://docs.aws.amazon.com/whitepapers/latest/cost-management/introduction.html Amazon EC2 Reserved Instances and Other AWS Service Reservation Models (3/7) o https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-reservation-\\nmodels/introduction.html https://aws.amazon.com/govcloud-us/\\nhttps://docs.aws.amazon.com/govcloud-us/latest/UserGuide/welcome.html\\nhttps://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html\\nhttps://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html\\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html\\nhttps://aws.amazon.com/solutions/cost-optimization-monitor/\\nhttps://www.business2community.com/cloud-computing/how-to-use-9-cloud-devops-best-practices-for-cost-control-02163854\\nhttps://www.business2community.com/cloud-computing/how-to-use-9-cloud-devops-best-practices-for-cost-control-02163854\\nhttps://theleanway.net/The-Five-Principles-of-Lean\\nhttps://www.ijcaonline.org/archives/volume44/number23/6424-8653\\nhttps://www.inteqgroup.com/blog/6-key-business-process-reengineering-steps\\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html\\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html\\nhttps://d0.awsstatic.com/whitepapers/compliance/AWS_Security_at_Scale_Logging_in_AWS_Whitepaper.pdf\\nhttps://d0.awsstatic.com/whitepapers/compliance/AWS_Security_at_Scale_Logging_in_AWS_Whitepaper.pdf\\nhttps://docs.aws.amazon.com/whitepapers/latest/cost-optimization-laying-the-foundation/introduction.html\\nhttps://docs.aws.amazon.com/whitepapers/latest/cost-optimization-laying-the-foundation/introduction.html\\nhttps://docs.aws.amazon.com/whitepapers/latest/cost-management/introduction.html\\nhttps://docs.aws.amazon.com/whitepapers/latest/cost-optimization-reservation-models/introduction.html\\nhttps://docs.aws.amazon.com/whitepapers/latest/cost-optimization-reservation-models/introduction.html 32 Leveraging Amazon EC2 Spot Instances at Scale (4/7) o https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-leveraging-ec2-\\nspot-instances/introduction.html Creating a Culture of Cost Transparency and Accountability (5/7) o https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-transparency-\\naccountability/introduction.html?did=wp_card&trk=wp_card Automating Elasticity (6/7) o https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-automating-\\nelasticity/introduction.html?did=wp_card&trk=wp_card Right Sizing (7/7) o https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-right-\\nsizing/introduction.html?did=wp_card&trk=wp_card https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-leveraging-ec2-spot-instances/introduction.html\\nhttps://docs.aws.amazon.com/whitepapers/latest/cost-optimization-leveraging-ec2-spot-instances/introduction.html\\nhttps://docs.aws.amazon.com/whitepapers/latest/cost-optimization-transparency-accountability/introduction.html?did=wp_card&trk=wp_card\\nhttps://docs.aws.amazon.com/whitepapers/latest/cost-optimization-transparency-accountability/introduction.html?did=wp_card&trk=wp_card\\nhttps://docs.aws.amazon.com/whitepapers/latest/cost-optimization-automating-elasticity/introduction.html?did=wp_card&trk=wp_card\\nhttps://docs.aws.amazon.com/whitepapers/latest/cost-optimization-automating-elasticity/introduction.html?did=wp_card&trk=wp_card\\nhttps://docs.aws.amazon.com/whitepapers/latest/cost-optimization-right-sizing/introduction.html?did=wp_card&trk=wp_card\\nhttps://docs.aws.amazon.com/whitepapers/latest/cost-optimization-right-sizing/introduction.html?did=wp_card&trk=wp_card 33 Appendix B Cloud Computing \\nCloud computing is providing developers and IT departments with the ability to focus on what matters most and avoid undifferentiated work like procurement, maintenance, and capacity planning. Specific user needs require different models and deployment strategies, with each type of cloud service and deployment method providing you with different levels of control, flexibility, and management. Understanding the differences between Infrastructure as a Service (IaaS), Software as a Service (SaaS), and Platform as a Service (PaaS), as well as what deployment strategies you can use, can help you decide what set of services is right for your needs. B.1 Compute Models There are three main models for cloud computing. Each model represents a different part of the cloud computing stack. B.1.1 IaaS Infrastructure as a Service contains the basic building blocks for cloud IT and typically provide access to networking features, computers (virtual or on dedicated hardware), and data storage space. Infrastructure as a Service provides you with the highest level of flexibility and management control over your IT resources and is most similar to existing IT resources. B.1.2 SaaS Software as a Service provides you with a completed product that is run and managed by AWS. In most cases, people referring to Software as a Service are referring to end-user applications. With Software as a Service, you only need to think about how you will use that particular piece software, not how it is maintained or how the infrastructure is managed. B.1.3 PaaS Platforms as a Service remove the need to manage the underlying infrastructure (e.g. hardware and operating systems) and instead focus on the deployment and management of your applications. This increases efficiency as you dont need to worry about resource procurement, capacity planning, software maintenance, patching, or any of the other undifferentiated heavy lifting involved in running your application. B.2 Deployment Models B.2.1 Cloud A cloud-based application is fully deployed and run in the cloud, with applications in the cloud either having been created in the cloud or migrated to the cloud from an existing infrastructure. Cloud-based applications can be built on low-level infrastructure pieces or can use higher level services that provide abstraction from the management, architecting, and scaling requirements of core infrastructure. 34 B.2.2 On Premise On-premises deployment is used for its ability to provide dedicated resources, but does not provide as many benefits as cloud computing. In most cases this deployment model is the same as legacy IT infrastructure, while using application management and virtualization technologies to maximize utilization of resources. Using virtualization and resource management tools, this process of on-premise deployment is sometimes called the private cloud. B.2.3 Hybrid A hybrid deployment is a way to connect infrastructure and applications between cloud-based resources and local resources. This hybrid deployment between the cloud and existing on- premises infrastructure extends an organization's infrastructure into the cloud while connecting resources from the cloud to its internal system. 35 Appendix C AWS Overview \\nThe AWS cloud is hosted worldwide in AWS Regions and Availability Zones (AZ). Each AWS Region is separate consisting of multiple Availability Zones (typically 3). The example program operates within the GovCloud (US-East) region. Each Availability Zone is a fully isolated partition of the AWS infrastructure that consists of discrete data centers which are fully redundant. \\nFigure 10 Relationship Between Regions and Availability Zones Cloud administrators have the option to choose which geographic",
  "updated_at": "9/20/1994 12:00:00 AM",
  "created_at": "3/16/2020 12:00:00 AM"
}