{
  "sdl_source_type": "PRC",
  "sdl_date": "2020-09-25T00:00:00",
  "countryPublished": "East Timor",
  "conference": "protesting theoretically cl Ercan",
  "originalAuthorName": "Karolina o Neff",
  "title": "jitneys",
  "declaredTags": "urban development|blockchain-to-blockchain connectivity|workforce development|fixed-position cameras",
  "releaseReason": "headband's/archery",
  "docName": "UY_49_1701",
  "fundingCenter": 51,
  "resourceURL": "https://dedicate.com",
  "fundingDepartment": "rn10",
  "caseNumber": "76-1415",
  "publicationDate": "3/11/2017 12:00:00 AM",
  "releaseYear": 2011,
  "releaseStatement": "MITRE External Publication",
  "approver": "$Julienne $Keighley",
  "handCarry": 9,
  "authorDivision": "jo95",
  "copyrightOwner": "Rosell Hautem",
  "lastModifiedDate": "6/21/2001 12:00:00 AM",
  "releaseDate": "9/7/2001 12:00:00 AM",
  "onMitrePublicSrvr": 0,
  "projectNumber": "4313RYXA11",
  "materialType": "Book",
  "publicationType": "Book",
  "authorCenter": 34,
  "originalAuthorID": "Killian",
  "mitrePublicServer": 0,
  "subjectTerminology": "Communications Technology (General)",
  "dateEntered": "2/2/2005 12:00:00 AM",
  "documentInfoURL": "https://astonishes cuisine anachronistic tonnages wealth's.com",
  "softShell": 0,
  "publishedOnNonMITREServer": 0,
  "priorCaseNumbers": "CASE3  18-2300|CASE1: 16-3366|CASE1: 18-0296",
  "organization": "pm75",
  "authorDepartment": "vj92",
  "publicationYear": 2017,
  "sensitivity": "Public",
  "copyrightText": "(c) 2016 The MITRE Corporation All Rights Reserved",
  "fundingSource": "NSEC MOIE",
  "level1": "HR, Strat Comm & BD Ops/Dev",
  "fundingDivision": "bugling Tobago Riviera's musket Kahlua",
  "publishedOutsideUSA": 0,
  "level3": "uj49",
  "level2": "is50",
  "sdl_id": "16cbc1e203d648b6ab9fbbd77a168207",
  "text": "the simulation. \\nAlso, they should have the data distribution interfaces that can \\nexchange data and comply with the protocol defined in the Real-\\nTime Infrastructure (RTI). They receive system status (e.g., \\nflight positions, trajectories, airspace constraints) and output \\nTFM actions (e.g., reroutes, departure delays) 6) TFM Integration Policy Module \\nThis governs how TFM actions from multiple simulation modeling components should interact. For example, if an airborne flight has already taken an action from Component A, \\nthe Integration Policy Module may dictate that it cannot take \\nanother action from Component B in the next 15 minutes due to \\nprocedural or operational considerations. Such treatment of the \\nprecedence relations of TFM actions is typical in a TFM \\nintegration study, either from the functional or procedural \\nperspective. The settings in the Integration Policy Module are specific to \\nan integration scenario, and could be parameterized pursuant to \\na Monte Carlo analysis. 7) Traffic Simulator \\nOur idea is to employ a dedicated air traffic simulator to evaluate the actions generated by individual TFM components, \\ne.g., revised departure times, flight reroutes, and requested times \\nof arrival (RTAs) at fixes. This traffic simulator will perform the \\nfollowing functions: Advance flights through airspace from origin to \\ndestination airports; Provide the current status of system state (e.g., flight \\npositions, flight trajectories, sector traffic counts); Ingest and execute the actions levied by the TFM \\nIntegration Policy Module; Implement fundamental air traffic control (ATC) rules \\nand constraints (e.g., aircraft separation, \\ndeparture/arrival procedures, facility letter of agreement \\n(LOA) restrictions, sector capacities, and special use \\nairspace (SUA) transits). Figure 1 illustrates the proposed architecture of the RTI. To \\ninitialize a run, all the simulation modeling components, the \\nIntegration Policy Module, and the traffic simulator need to \\nregister with the RTI and start their publication/subscription \\nservices. During a simulation run, the simulation clock only \\nmoves from one time step to the next when all the components \\nhave finished their processes from the prior step. At each step, \\nthe TFM modeling components receive data of interest provided \\nby the traffic simulator and then publish the TFM actions when \\nsome triggering events are activated. Subsequently, the \\nIntegration Policy Module, which subscribes to TFM actions, \\ndetermines whether to publish those actions to the traffic \\nsimulator based on the current operative integration policies. \\nThe traffic simulator applies TFM actions, if any, and then \\nupdates system status. At the end of the simulation time, all the \\nmodeling components are halted. Figure 1. Architecture of the Proposed TFM Integrated Simulation Platform III. CASE STUDY: ENABLING ARRIVAL METERING DURING \\nEN ROUTE WEATHER VIA AN ADVANCED REROUTE CAPABILITY This section describes the background of an operational \\nproblem and how a new TFM capability is expected to mitigate \\nthat problem. This problem illustrates the need for the proposed \\nplatform championed in this paper. A. Arrival Metering during En route Weather The Time-Based Flow Management (TBFM) system is a \\nmeans of modulating (metering) air traffic flows using time \\nsequencing. In the case of arrival flows, as flights progress \\ntoward a destination airport, the TBFM system constructs a \\ntrajectory which includes predictions of future crossing times at \\nspecific meter reference points calculated using winds, aircraft \\nperformance characteristics, flight plan information, etc. When \\na flight crosses the Freeze Horizon (FH: a specified distance \\nfrom the meter reference point where assigned times are \\nfrozen,), a scheduled time of arrival (STA) at the meter reference point is assigned for the flight, based on competing \\ndemand and scheduling constraints. One type of meter reference \\npoint is a meter fix (MF) which is typically on or near the \\nTerminal Radar Approach Control (TRACON) boundary, about \\n40 to 60 nautical miles (NMs) from the destination airport. A \\nsimplified diagram of a typical metering design is shown in \\nFigure 2. Delivering the flights per their STAs to the MFs will ensure \\nsteady, manageable traffic flows into the TRACON airspace, \\nconsistent with the runway arrival capacity. During periods of \\nhigh demand, controller and pilot actions such as speed \\nadjustments or vectoring may be necessary to meet the \\nscheduled times [6]. However, a serious challenge for arrival \\nTBFM is maintaining time-based schedules in conditions of \\nsevere en route weather. Severe weather affects routing \\npredictability: route changes or vectors implemented inside the \\nFH alter trajectories from the flights plan, making flying time to \\nthe meter fix less predictable, and STAs difficult to achieve. \\nOften, TBFM is turned-off in these cases, and a less efficient \\nflow management technique is employed, namely, miles-in-trail \\n(MIT) spacing at the MF and further upstream. MIT spacing is \\nless efficient because each flow is managed independently, \\nwithout consideration for the relative demand on each flow and \\nthe merging of flows as they approach the airport. In sum, lacking a dynamic reroute capability, flights passing \\nthrough severe en route weather inside the FH will likely cause \\na path modification which alters flying time, making trajectory \\npredictions unstable and STAs potentially unachievable. Figure 2. Notional flight path, TBFM FH, and MF B. Benefit of Integrating A Reroute Capability One of the promising solutions to the challenge of metering \\nflights during weather impact is to incorporate a dynamic route \\nplanning capability for the flights, to identify reroute \\nopportunities before their crossing the FH and making the \\nrevised trajectory available to TBFM [7]. In the current traffic management tool set, automated \\nidentification of airborne flights affected by severe weather is \\nnot available. In light of this need, MITRE CAASD and NASA, \\nin partnership with the FAA, have developed a concept and \\nprototype capability to identify such problems and help to \\nresolve them. This capability is referred to as Advanced Flight-\\nSpecific Trajectories (AFST). (See [8], wherein the capability \\nwas called En route Flow Planning Tool.) The AFST concept is based on the premise that as planning \\nhorizons decrease (shorter look-ahead times), predictions \\nabout constraints and about affected flight trajectories become more certain. With this increased certainty, flow management \\ndecisions can become less conservative, i.e., more precise. \\nAFST will provide more efficient and flexible flight trajectory \\noptions which are consistent with prevailing en route \\nconstraints, e.g., weather blockage, sector congestion, or special \\nuse airspace activation. For the problem of TBFM use during severe weather, AFST \\nwill formulate, prior to a flights crossing of the FH, reroutes, \\ni.e., deviations around or through weather. The adjusted route \\ncan then be provided to TBFM and because it has been de-\\nconflicted with the weather, the new path can be maintained \\nwithout minor or no further modification. This means that \\ndependable schedule times can be assigned and achieved \\nTBFM can remain active, thereby enabling greater efficiencies \\nas compared to turning it off and reverting to MIT restrictions. IV. BUILDING THE SIMULATION PLATFORM This section describes the setup for the AFST/TBFM \\nintegration study. A. RTI, Data Distribution, Time Management, and Simulation \\nManagement As described in Section II, the proposed platform is similar \\nto the HLA in that there is a runtime architecture which manages \\nseveral distributed simulation services. To meet the \\nrequirements, MITREs Center for Advanced Aviation System \\nDevelopment (CAASD) developed the Simulation Data \\nDistribution Framework (SDDF), a cross-platform architecture \\nwhich supports several types of simulation experiments, \\nconnecting a variety of applications. Additionally, SimBuilder, \\ndeveloped by MITRE CAASD, is a deployment utility with a \\nuser interface for managing a set of applications which operate \\non a simulation platform. These two technologies work in unison \\nto satisfy the requirements in the following ways. SDDF/SimBuilder allows applications to share a service host \\nand communications port for joining a common simulation \\nmodeling experiment. This distinguishes the applications from \\nthose joining to other concurrent simulations, avoiding \\ninterference. It also allows independent applications to join a \\nsimulation ad-hoc, even after the simulation clock has started. \\nApplications that subscribe to services via SDDF must provide \\nhandling routines for events received from publishing \\napplications. SDDF will buffer those events until the subscriber \\nposts a READY status, which triggers those routines such \\ntransactions happen regularly within the main processing cycle. The SDDF/SimBuilder centrally scripts the execution \\nparameters of all applications, including the hosts, displays, and \\ncommand-line parameters used for each one. This feature is \\nconvenient for simulation repeatability, start-up, and shut-down. SDDF/SimBuilder serve the role of time management by \\noffering multiple modes of fixed-interval time advancement. An \\nHITL experiment typically runs on par with wall-clock time, i.e., \\none second of simulation time takes one second. SDDF also \\nsupports a time-stepped protocol in which the simulation is \\nrunning as fast as it can, without any applications lagging. (The \\nother major time-advance mechanism, next event time \\nadvance, is not available in SDDF.) Under SDDF, applications have a means to advertise the \\nevent contents that they publish, and they can discover the \\nservices advertised by other applications in the simulation. Note that SDDF/SimBuilder is one of several MITRE \\nCAASD implementations for distributed simulation \\ntechnologies based on published standards, such as HLA and \\nDistributed Interactive Simulation (DIS) [2, 3]. Other research \\ninstitutions may follow similar standards and build this \\narchitecture for individual simulation needs. B. A Dedicated Traffic Simulator The requirements of a traffic simulator for the proposed \\nplatform were discussed in Section II.B. While there",
  "updated_at": "9/4/1993 12:00:00 AM",
  "created_at": "9/14/1990 12:00:00 AM"
}