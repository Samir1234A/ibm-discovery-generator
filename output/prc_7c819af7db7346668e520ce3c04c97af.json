{
  "sdl_source_type": "PRC",
  "sdl_date": "2020-10-16T00:00:00",
  "countryPublished": "Palau",
  "conference": "loathings precondition's bm Janeth",
  "originalAuthorName": "Bryam x Dorr",
  "title": "Novosibirsk discontinuance's",
  "declaredTags": "recruiting|white paper|Nibbler",
  "releaseReason": "basso/Rolodex",
  "docName": "IN_38_1643",
  "fundingCenter": 49,
  "resourceURL": "https://horribly.com",
  "fundingDepartment": "cg16",
  "caseNumber": "52-8131",
  "publicationDate": "2/22/2019 12:00:00 AM",
  "releaseYear": 2015,
  "releaseStatement": "Academic Program Submission",
  "approver": "$Nazmul $Helgenberg",
  "handCarry": 5,
  "authorDivision": "bc88",
  "copyrightOwner": "Mirian Wojtowic",
  "lastModifiedDate": "5/25/2001 12:00:00 AM",
  "releaseDate": "10/28/2018 12:00:00 AM",
  "onMitrePublicSrvr": 0,
  "projectNumber": "3078ABFJ43",
  "materialType": "Book",
  "publicationType": "Article",
  "authorCenter": 75,
  "originalAuthorID": "Anatalia",
  "mitrePublicServer": 0,
  "subjectTerminology": "Computer-Communication Networks (General)",
  "dateEntered": "7/30/2001 12:00:00 AM",
  "documentInfoURL": "https://heartstrings mug's dosage's Persian's bested.com",
  "softShell": 0,
  "publishedOnNonMITREServer": 0,
  "priorCaseNumbers": "CASE1: 17-4622|CASE2: 17-2450|CASE1: 18-0442",
  "organization": "jt11",
  "authorDepartment": "oh15",
  "publicationYear": 2004,
  "sensitivity": "Public",
  "copyrightText": "(c) 2016 The MITRE Corporation All Rights Reserved",
  "fundingSource": "NSEC MOIE",
  "level1": "MITRE Legacy",
  "fundingDivision": "Jamaal backbit Loraine's algebraic Shari",
  "publishedOutsideUSA": 0,
  "level3": "xf80",
  "level2": "tk83",
  "sdl_id": "7c819af7db7346668e520ce3c04c97af",
  "text": "of the system are about A1 and PR. In particular, A1 is authorized to learn certain aspects of the behavior of PR. A1\\ncan learn which records PR has submitted that are relevant to a permissible query. If PR submits records that are not related to any permissible query of A1, then EpiDB is obliged to ensure that they can have no effect on what A1\\nobserves on channels 1, 2. We do not need to specify the behavior of A1 and PR, since the goals should hold regardless of their actions. Thus, we regard them as always willing to send or receive any message on their outgoing or incoming channels. By contrast, E has a specification. We can describe it as a state machine where the state includes two sets of tuples, representing the tables T d, T e. An additional state component records the not-yet-processed query pp1, d, t0q or else K if every query has already received a response. A new record rd, re may be deposited at any moment, even between receiving a query and answering it, so this state component remembers any as-yet unanswered query. We do, however, maintain the upper bound t of the times mentioned in all queries we have re- ceived; we refuse to receive a new record whose time does not exceed t` 2. We record this maximum query time in the state component m, and we require that when a record r is received, its time is greater than m` 2. We write timepqq or timeprq for the last component of q, r, which is its time component. We give the labeled transition relation in Fig. 2. Notice that E does not accept a new query until it has answered the previous one, and restored K to the first state component. Also, channel 2 carries a set of records pp2, e2, t2q, or else a symbol unsick , imperm. 2.3 The intended information flow EpiDB is intended to limit information flow from the provider PR to the analyst A1. In particular, the access control system is intended to limit flow to infor- mation for which A1 is authorized. The remainder of the system is intended to maximize flow subject to authorization, and relevance to the queries A1 asks. For definiteness, we will assume that each analyst A has been assigned: personspAq: A set of persons of interest for A; diseasespAq: A set of diseases A is authorized to consider; startpAq: an earliest time about which to query; and finishpAq: a most recent time about which to query. Pre-State Label (channel, message) Post-State pK, T d, T e, mq p1, qq pq, T d, T e, m1q pq, T d, T e, mq p2, aq pK, T d, T e, mq px, T d, T e, mq p3, rdq px, T\\nd\\nY trdu, T e, mq px, T d, T e, mq p3, req px, T\\nd, T e Y treu, mq where a anspA1, q, T\\nd, T eq, m1 maxpm, timepqqq q is a non-K query, x is any value, and rd, re are respectively a disease record and an encounter record, with timeprdq, timepreq m` 2 Fig. 2. Labeled transition relation for E Since A will be able to learn about disease records within of the time t0 in a query, we will write IntpAq rstartpAq, finishpAq`s to define the the interval of disease records A is authorized to learn about. The analyst A who queries p, d, t will learn whether p had disease d at time t1 near t, as long as p P personspAq, d P diseasespAq, and t1 P IntpAq. Or more precisely, A learns whether PR has registered this fact in the relevant portion of its run. The set of permissible queries creates a region R0 of the space of disease records that A can learn about directly. The relevant portion of PRs run also contains a set of encounter records of the form ptp, p1u, eq, and these records create an adjacency relation between records rd P R0 and other disease records involving p\\n1, d, and a nearby time t1. We will refer to the set of disease records adjacent to R0 as R1. Essentially, the authorization mechanism entails that A should learn nothing about what disease records and encounter records PR has submitted, except as they help to determine R0 and R1. In particular, PR messages that provide encounter records not connected to R0 should be invisible to A. Moreover, given a set of encounter records, PR messages that provide disease records not in R0\\nor R1 are also invisible. In particular, As observations as a consequence of a single query must re- main unchanged, regardless of variation in PRs messages containing encounter records unconnected to R0 and regardless of variation in disease records not in R0 YR1. A query imposes no ordering requirement on PRs messages. By submitting a sequence of queries, A can learn conjunctions of the con- clusions returned by the individual queries. But by the timing constraints, A cannot exclude any particular order in which the records may have arrived. In particular, a record can have been absent from an earlier response if it is found in a later response. Thus, the purpose of the EpiDB system is essentially a what-declassification, where the regions R0, R1 for each permissible query q determine what aspects of the sensitive PR runs should be declassified and made available to the analyst A asking q. LO, CH,DA,ST , EV sndr : CH LO rcpt : CH LO chan : EV CH msg : EV DA lts : LO lts Table 1. Signature of frames Later (Section 5) we will refine the schematic version of EpiDB from Figs. 1 2 into a more complex system with separate components that guide an efficient and reliable implementation. 3 Information Flow in the Frame Model In this section, we will summarize the key notions of [4]. Systems (or frames), represented as directed graphs, have executions; the local portions of an execu- tion are called local runs; and an observer who sees one local run is trying to infer information at a source, by determining what local runs at that source are compatible with the observations. An information flow specification, which we call a blur, is a specific kind of closure condition on the set of compatible local runs at the information source. 3.1 Frames and Executions We formalize systems such as EpiDB by structures we call frames. A frame F consists of a directed graph, the nodes (or locations) of which are processing elements each defined by a labeled transition system, and the arcs of which carry messages. An execution of a frame F is a partially ordered set of events, where each event e has a channel chanpeq and a message msgpeq. The events associated with a single node nmust be linearly ordered, and moreover must form a possible trace of ltspnq. However, events on two channels that are not attached to a common node may be unordered, unless some causal sequence of events connects them. We will use the words node and location synonymously. Definition 1. Let LO, CH,DA,ST , EV be domains that we will call locations, channels, data, states, and events, resp. 1. A labeled transition relation is a ternary relation ; ST EV ST . A labeled transition system is a pair p;, s0q of a labeled transition relation and an initial state s0 P ST . lts is the set of labeled transition systems.\\n2. When ` P LO, we define chansp`q tc P CH : sndrpcq ` or rcptpcq `u.\\n3. A frame is a structure F containing the domains and functions shown in Table 1 satisfying the following properties:\\n(a) For all e1, e2 P EV, if chanpe1q chanpe2q and msgpe1q msgpe2q, then for all ` P LO and s, s1 P ST , s\\ne1\\n;` s 1 iff s\\ne2\\n;` s 1. (b) For all s, s1 P ST , e P EV, and ` P LO, s\\ne\\n;` s 1 implies chanpeq P chansp`q.\\nwhere we let p;`, initialp`qq ltsp`q. {{{ The histories of an lts p;, s0q are all finite or infinite alternating sequences\\nh xs0, e0, s1, . . . , si, ei, si`1, . . .y starting with s0, such that psj , ej , sj`1q P ; whenever ej is well defined. In particular, sj`1 is well defined whenever ej\\nis, so that h does not end with an event ej . A trace of p;, s0q is a finite or infinite sequence of events tr xe0, e1 . . .y such that there is a history h where tr enumerates the events in h. An execution is a partially ordered set of events thatwhen projected onto chansp`qalways yields a trace for `. Definition 2. A pE,q is an execution for a frame F , written A P ExcpFq, iff E EV and is a well-founded partial ordering on E, and, for all ` P LO, letting trAp`q be the set te P E : chanpeq",
  "updated_at": "1/9/1997 12:00:00 AM",
  "created_at": "4/29/2014 12:00:00 AM"
}