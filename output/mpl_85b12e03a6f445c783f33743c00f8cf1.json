{
  "sdl_source_type": "MPL",
  "productName": "placer bravura",
  "uploadedate": "2010-11-12T00:00:00",
  "productUrl": "http://Rigel.com",
  "creatorNames": "Grettel f Box;Shorena v Scheinflug;Florentina n Ziegel;Trevor w Maifarth",
  "uploaded": "2013-09-19T00:00:00",
  "sdl_extracted_summary": "with Respect \\nto Mission System Materiel \\nSolutions \\nAnalysis Reconnaissance Program Office systems handling \\ninformation about needs, \\nconcept of operations, interfaces Acquire information about the \\nto-be-acquired mission \\nsystem Technology \\nMaturity and Reconnaissance Program Office systems handling \\ninformation about technical Acquire information from \\ndesign review xvi Risk Reduction \\nPhase alternatives, risks Engineering & \\nManufacturing \\nDevelopment Reconnaissance Program Office, contractors and \\nsubcontractor systems handling \\ninformation about design \\ndecisions and implementation \\nprocesses Acquire information about \\ntechnical architecture of \\nmission system Weaponize There are no target system \\nexamples because this activity \\ntakes place on an adversary \\nsystem using information gained \\nin previous stages Develop cyber weapon, based \\non expected technical \\narchitecture of the mission \\nsystem Deliver Contractor and sub-contracter \\nsystems used to manage and \\nexecute design and \\nimplementation processes Deliver the cyber weapon \\nget the cyber weapon / \\nmalicious component into the \\ncontractors development \\nenvironment, so that it will be \\nintegrated into the mission \\nsystem Exploit Contractor and subcontractor \\nsystems used to manage and \\nexecute design and \\nimplementation processes Take advantage of a \\nvulnerability to install the \\ncyber weapon, i.e., to make it \\npart of the mission system Control / \\nMaintain Contractor and subcontractor \\nsystems used to manage and \\nexecute design and \\nimplementation processes; \\nProgram Office systems handling \\ninformation from design reviews Prevent the detection of the \\ninsertion of the cyber weapon \\ninto the mission system \\nundermine contractor quality \\nassurance processes and tools \\nto prevent the insertion of the \\nmalicious component from \\nbeing detected. Production & \\nDeployment Weaponize There are no target system \\nexamples because this activity \\ntakes place on an adversary \\nsystem using information gained \\nin previous stages Develop cyber weapons based \\non technical architecture and \\nidentified characteristics of \\nthe mission system (e.g., \\nspecific products or \\ncomponents) Deliver Contractor and subcontrator \\nsystems used to manage and \\nexecute design and \\nimplementation processes; COTS \\nsupply chain for previously \\nidentified components Deliver cyber weapons get \\nthe cyber weapon / malicious \\ncomponent into the \\ncontractors development \\nenvironment, so that it will be \\nintegrated into the mission \\nsystem Exploit Contractor and subcontractor \\nsystems used to manage and \\nexecute design and \\nimplementation processes; COTS \\nsupply chain for previously Take advantage of a \\nvulnerability to install the \\ncyber weapon, i.e., to make it \\npart of the mission system xvii identified components\\nControl / \\nMaintain Contractor and subcontractor \\nsystems used to manage and \\nexecute design and \\nimplementation processes Prevent the detection of the \\ninsertion of the cyber weapon \\ninto the mission system \\nundermine contractor quality \\nassurance processes and tools \\nto prevent the insertion of the \\nmalicious component from \\nbeing detected Execute Execute malware so it \\nsuccessfully corrupts or \\notherwise undermines critical \\ncontractor developed systems Execute malware the \\ndefenders environment in the \\ndeployed system before being \\nmigrated to Operations and \\nSupport Maintain Systems used in test and \\nevaluation, at prime contractor, \\nindependent validation and \\nverification (IV&V) organization, \\nor cyber range Prevent the detection of the \\ninsertion of the cyber weapon \\ninto the mission system \\nundermine quality assurance \\nprocesses and tools to \\nprevent the insertion of the \\nmalicious component from \\nbeing detected; modify test \\nresults Operations & \\nSupport Control Mission system Control the Attack in the \\nMission System Environment Execute Mission system Achieve the intended effects \\non the mission system Maintain Mission system; systems used for \\nmaintenance and support Maintain Presence for Future \\nAttacks Example Adversary Actions3.3\\nThis subsection discusses example actions of attacks at each acquisition phase in the abstract. \\nSection 4 provides a notional example that is more specific. These attacks, typically employ \\ncommon cyber attacks along with coordination across multiple attacks, are part of the larger, \\nrecursive, cyber attack lifecycle described in Section 3.2. \\nIn the Materiel Solutions Analysis and Technology Maturity and Risk Reduction Phases, the \\nadversary is focused on reconnaissance trying to find out about the end system. The \\nreconnaissance activities the adversary most likely uses in these phases are extremely hard to \\ndetect because they are frequently passive (e.g., collecting data by listening to traffic on a \\nnetwork) or hidden (e.g., hiding information exfiltration in normal network traffic). These \\nactivities can still be mitigated against by using one or more of the techniques described in \\nsection5. Addressing the reconnaissance activities in the Materiel Solutions Analysis phase and \\nthe Technology Maturity and Risk Reduction phase is one of the most effective ways of \\naddressing the adversarys weaponization activities. If the adversary does not have adequate \\ninformation it is hard for them to develop effective weaponized tools.\\nThe adversary focuses their weaponization, attack delivery, and installing the exploit in the \\nEngineering and Manufacturing Development Phase and the Production and Deployment phase. xviii 7 Attacks A6, A 27 and A29 from [3] are examples of this type.\\n8 Attack A37 from [3]is an example of this type of attack. There is also further reconnaissance to determine what to do in this and later acquisition lifecycle \\nphases. Examples of these types of attacks include7 microprocessors or other chips with secret \\nback doors substituted for legitimate hardware components, malicious code inserted into open \\nsource software libraries, and establishing rogue processes in an integration facility to \\nclandestinely insert maliciously altered components.\\nThe adversary shifts towards Control, Execute and Maintain activities as the acquisition lifecycle \\nprogresses into the Production and Deployment phase and the Operations and Support phase. By \\nthe Production and Deployment phase, the adversary already has a foothold in the mission \\nsystem. While the adversary is likely still developing or honing their weapons, delivering new \\nversions or updates, and initiating new attacks; their interests have transitioned to controlling \\ntheir tools, executing the attack on the mission, and maintaining their presence (e.g., when the \\nsystem goes through independent verification and validation). This is particularly true as the \\nsystem moves towards the later portion of the phase. Some examples of what the adversary might \\ndo are: corrupt critical operational data by injecting false but believable data into the system \\nduring configuration8, or leverage backdoors previously inserted into software or compromised \\nhardware or firmware to control systems.\\nDuring the Operations and Support phase, the adversary focuses on Control, Execute and \\nMaintain activities. The adversary may trigger their backdoors to establish C2 channels. \\nAlternately, their cyber weapon could be set to auto-trigger based on conditions that can be \\ndetected within the mission system. Adversary Advantages Gained Via Supply Chain Attacks3.4\\nAs stated above, when employing a supply chain attack, the adversary wants to impact \\nconfidentiality, integrity, and/or availability (CIA) of critical mission systems so as to affect the \\nmission which depends on those systems. Supply chain attacks, just like any cyber attack, \\nexploit a target system and then seek to control, execute and maintain presence on that system. \\nSo, a supply chain attack once delivered, will appear to a network defender like any other cyber-\\nattack. It will use the same tactics, techniques and procedures (TTPs) (establish persistence, gain \\ncredential access, lateral movement etc.). In their delivery, however, supply chain attacks are \\nunique and the adversary has the advantages of establishing persistence early by embedding the \\nattack within one component of the end mission system and delivering the cyber weapon \\nundetected. Cyber-attacks are, for the most part, delivered from an external source to an \\noperational network. Therefore, perimeter defenses such as intrusion detection devices and \\nfirewalls are effective tools to detect and stop attacks upon entry. However, a supply chain attack \\nis often initiated by an embedded change to a component of the system which is accepted as a \\nknown good. An approved or trusted delivery mechanism such as a software update \\nfunction delivers the supply chain attack unsuspected by a network defender. As stated in the \\nrecent Defense Science Board Task Force on Cyber Supply Chain when done effectively, \\nmalicious insertion will not be detectable until actuated and it may present as a design flaw when \\nultimately observed [6].\\nThe supply chain attack is initiated early in the system design so that persistence can be \\nestablished before the system is built. Once present in a low-level component such as firmware, \\na supply chain attack is difficult to detect on an operational network and is a key advantage of \\nsupply chain attacks. xix A recent example of an attack in which the software supply chain was compromised is Nyetya \\n(Cisco TALOS naming convention) or NotPetya (widely known name) ransomware of late June \\n2017. This ransomware, per preliminary reports, did not gain access via an email or office \\ndocument. Instead, the entry point is thought to be via the update system for a Ukrainian tax \\naccounting package (MeDoc) [15]. Once entry was gained, the adversary enumerated the \\nnetwork components, stole credentials, moved laterally eventually encrypting large amounts of \\ninformation. \\nAnother example of an effective supply chain attack is a Basic Input Output System (BIOS) \\nimplant. This implant can be done at a point within the supply chain prior to operations or by an \\nautomated firmware management function such as Intel Active Management Technology or Intel \\nStandard Manageability (AMT, LMS) that operate below the OS (unobservable from OS/kernel). \\nA BIOS or unified extensible firmware interface (UEFI) implant establishes presence and \\nmaintains that presence even if the operating system is re-installed. \\nIn summary, supply chain attacks can be distinctive",
  "sdl_date": "2020-05-23T00:00:00",
  "countryPublished": "Madagascar",
  "conference": "calipered upcoming dp Delyan",
  "originalAuthorName": "Oceania e Schittelkopp",
  "title": "spat forestation",
  "declaredTags": "ADS-B antenna|Dronenut drone application|criminology|CSNR|complex systems",
  "releaseReason": "tomahawked/conceptual",
  "docName": "FT_41_4384",
  "fundingCenter": 34,
  "resourceURL": "https://dogfish.com",
  "fundingDepartment": "dn15",
  "caseNumber": "29-7530",
  "publicationDate": "4/17/2019 12:00:00 AM",
  "releaseYear": 2017,
  "releaseStatement": "Public Collaboration/Benchmarking/Standards Body",
  "approver": "$Huimin $Bormans",
  "handCarry": 3,
  "authorDivision": "of50",
  "copyrightOwner": "Balvina Arrebola",
  "lastModifiedDate": "8/16/2012 12:00:00 AM",
  "releaseDate": "3/5/2004 12:00:00 AM",
  "onMitrePublicSrvr": 0,
  "projectNumber": "8972UQOB29",
  "materialType": "Paper",
  "publicationType": "Book",
  "authorCenter": 48,
  "originalAuthorID": "Rodulfo",
  "mitrePublicServer": 0,
  "subjectTerminology": "Management (General)",
  "dateEntered": "3/27/2000 12:00:00 AM",
  "documentInfoURL": "https://Trafalgar litterbug warmers pinpoints understudying.com",
  "softShell": 0,
  "publishedOnNonMITREServer": 0,
  "priorCaseNumbers": "CASE2: 18-2311",
  "organization": "co53",
  "authorDepartment": "jf63",
  "publicationYear": 1993,
  "sensitivity": "Public",
  "copyrightText": "(c) 2016 The MITRE Corporation All Rights Reserved",
  "fundingSource": "International Contracts",
  "level1": "HR, Strat Comm & BD Ops/Dev",
  "fundingDivision": "addends truant's tangs toking stronghold's",
  "publishedOutsideUSA": 0,
  "level3": "ch29",
  "level2": "rs75",
  "sdl_id": "85b12e03a6f445c783f33743c00f8cf1",
  "text": "Category Failure Rate per Flight Hour\\nMicro ( 0.55 lbs.) 1E-2 Mini (0.56 4.4 lbs.) 1E-3\\nLimited (4.5 20.9 lbs.) 1E-4 Bantam (21 55lbs.) 1E-5 Number of pedestrians exposed to aircraft flight operations () density of exposed population is the mean density of people per square o kilometer within the area of operation. The sAAT uses the average population density by square unit area for operations that cover areas with different population densities. Shelter factor ( shelter factor is the proportion of the population density that is exposed to the o vi\\n sUAS operation. A shelter factor of one assumes a worst-case scenario where the population is entirely un-sheltered, conversely, a shelter factor of zero assumes the entirety of the population is sheltered. Probability of the failed aircraft being on a collision course with pedestrian ( is currently defined as where is the calculated horizontal distance from the o point of failure. Probability of the person not avoiding the collision ( currently assumes a unit of one due to the lack of data on what effect onboard o mitigations may provide in avoiding a ground collision with a third-party, or, the \\npossibility of reactions by third-parties to avoid a potential collision threat. The value \\nindicates the worst-case scenario with no effect from onboard mitigations, and no \\nthird-party reaction on the ground. Probability of collision with person resulting in a fatality ( is currently determined by the terminal KE of the aircraft, the impact angle, the o vii\\n velocity equation, and the drag equation. Strengths and Weaknesses of the sAAT 3.2.1\\nStrengths of the sAAT model include: Consistency: Due to sAAT being a quantitative model, a given set of input parameters \\nwill consistently output the same answer providing repeatability.\\nModular Architecture: Given the incipient environment of UAS data, the sAAT is built \\nwith the ability to change input data quickly should research provide an improved input \\nparameter.\\nBuilding on Best Practices: The sAAT incorporates work validated by academia and \\nindustry. Weaknesses of the sAAT model include: Data Requirements Limit Features: sAAT is a relatively inflexible model unless further \\ndevelopment is made to incorporate additional risks such as human error, aircraft \\npenetration rates, effects of weather, impact severity, etc. Limited to Current Data: Being an inflexible model, accuracy of the sAAT is subject to \\naccuracy of the underlying data. Due to a lack of published research; principal data such \\nas aircraft reliability, minimum crash energies resulting in a fatality, and mission profiles \\nare posited until conclusive studies or data are provided or collected. sAAT Ground-Risk Model Inputs3.2.2\\nThe sAAT model allows the user to select standard mission profiles, aircraft characteristics, and \\nselected computational variables, such as the level of energy determined to be fatal, for the risk \\nanalysis calculations. The basic input to the sAAT are the parameters defining the mission area \\nand the aircraft characteristics. The aircraft and mission parameters are captured either in the \\nform of general-purpose mission profiles, or as mission-specific values defined by the user. The \\nrequired aircraft information includes gross-takeoff-weight, cross-sectional area of the aircraft, \\nmaximum aircraft speed, and maximum aircraft operating altitude. Additionally, the user enters \\nthe aircraft type, as either multirotor (e.g. a quadcopter), hybrid, or fixed-wing. Operational \\ninformation includes the expected operating speed and altitude. The sAAT uses global maximum \\nspeed and altitude values if operation specific values are not otherwise specified as an input \\nThe required information for the designated mission area includes the size, shape, geographic \\nlocation, and associated population densities for the region of operation. The region of operation \\nis a set of geodetic latitude and longitude points provided by the user that define either the \\nboundary of operation or the path of operation. Boundaries of operation can be a user defined \\ncircle, rectangle, or non-self-intersecting polygon. Paths of operation are a series of user-defined \\nwaypoints consisting of at least two points.\\nThe density of the population within the route of flight is a significant operational risk factor \\nwithin the mission profiles. Higher population density leads to a proportionally higher \\noperational risk. The sAAT uses a pedestrian density model, which is based on LandScan viii\\n Global Population Database developed by the U.S. Department of Energys Oak Ridge National \\nLaboratory [11]. sAAT Ground-Risk Model Outputs3.2.3\\nThe sAAT defines risk as the probability of fatality to a third-party. A third party is defined as a \\nmember of the public that is not a participant in the sUAS flight activity and is involuntarily \\nexposed to an aircraft accident [12]. It is the bystander that happens to be near the planned area of \\noperation of the sUAS. \\nThe sAAT model interface produces two outputs: (1) a graphical depiction of the risk value; and \\n(2) the sensitivity analysis of risk factors. In combination, these three outputs can aid the analyst \\nin determining if the risk assessment meets the acceptable safety levels. Additionally, the sAAT \\nmodel provides the user with outputs that identify the probability of an impact to a third party, \\nand the probability of the impact being fatal. The sensitivity analysis identifies the variables that \\nhad the most significant impact on driving the level of risk. 3-2. sAAT Input of Kinetic Energy and Probability of Fatality As illustrated in Figure 3-2, the input graph relates the PoF (%) to the estimated impact KE \\n(Joules). The dark line that indicates 50% probability represents the upper threshold of acceptable \\nrisk. In this example, the PoF (risk) is 91.2% for an estimated KE at impact of 165.5 Joules. The \\ngraph indicates, in this notional example, that the computed risk level is above the 50% \\nthreshold.\\nThe model identifies the parameters that have the highest sensitivity in driving the overall level \\nof risk. This allows for the near real-time assessment of risk and helps support the determination \\nof the acceptable risk level of sUAS operations. The sensitivity analysis output, as notionally \\nshown in Figure 3-3, indicates which factors contribute the most to the risk. The risk factors and \\ntheir associated rankings vary depending on the input data of the proposed sUAS operation. \\nFactors are listed in rank order. Positive values on the right side of the y-axis contribute to higher \\nrisk. Negative values, measured towards the left of the y-axis contribute to reducing the risk. In ix\\n this example, the risk can be reduced the most by reducing the greatest contributors: population \\ndensity and the weight of the aircraft. NOTE: this is just a notional output to demonstrate the \\nconcept as shown in Figure 3-2. Flying faster would NOT reduce risk. 3-3. sAAT Output of Sensitivity Analysis sAAT Air-Risk Component3.2.4\\nAlthough sAAT does not currently include an air risk component, it is intended that an air risk \\ncomponent will be added, using the following Modified Endoh methodology [16].\\nThe Air Risk model provides the localized risk analysis based on manned aircraft flight data, \\nwhich is derived from MITREs Global Flight Informatics (MGFI) database of manned traffic \\nunder radar and surveillance coverage. It provides the probability of a Mid-Air Collision Risk, \\nand has been successfully demonstrated with the FAA Pathfinder and UAS Test Site Programs, \\nand the Navys Triton program.\\nAir risk occurs when an operator loses control of the sUAS, and the aircraft achieves unsafe \\nproximity to an aircraft (an encounter). Once an encounter occurs, a calculation is made to \\ndetermine the probability of a near mid-air collision, defined as the situation when the sUAS and \\na manned aircraft occupy the same 3-dimensional space.\\nTypically, the risk calculation will also include a measure of event severity. To calculate the \\nseverity component of an air risk, it is necessary to understand the conditional probability of \\nfatality, given that a collision has occurred. However, research to determine this probability is not \\nyet sufficient to determine the consequences of such a collision.\\nThis methodology uses historical manned aircraft track data to determine a volumetric collision \\nrisk, that is, the probability of collision of an sUAS with a manned aircraft, moving in a volume \\nof airspace defined by time of data, altitude, latitude, and longitude. It does not consider the \\ncharacteristics of the sUAS. Necessary Simplifying Assumptions for sAAT 3.2.5\\nCalculating risk in a quantitative model requires data supporting all the above probabilities. \\nWhen exact probabilities are not available, assumptions must be made about these values, so that \\nthe result may be calculated. x\\n For example, the probability that the operator loses control of the aircraft, , is dependent on many factors, such as model, age, and weather. The sAAT model uses a mean time between failure derived from industry-wide operations as a value to represent the entirety of aircraft \\nreliability [17]. Clearly there is a range of possible probabilities due to the variety of factors, but \\nfor purposes of computational simplicity, sAAT assumes a single point estimate for this \\nparameter.\\nTo speed computation (and development), probabilistic distributions are replaced by point \\nestimates in the current version of sAAT.\\nAlso, some risk components are ignored, as they are not easily quantified: Operator skill\\nWeather conditions during mission\\nVisual obstruction during Line of Sight Operations\\nMechanical mitigations Similar and Related Quantitative Assessments 3.2.6\\nThe basic equation, expressing risk as a function of failure rate, and",
  "updated_at": "3/27/2012 12:00:00 AM",
  "created_at": "1/16/1995 12:00:00 AM"
}