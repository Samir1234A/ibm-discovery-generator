{
  "sdl_source_type": "tcas",
  "field_tca_short_name": "belabors sugarcoat separate",
  "changed": "2003-10-02T00:00:00",
  "field_tca_organizationleadername": "Ward K Casali",
  "capability_rul": "Lynn.com",
  "sdl_date": "2020-02-14T00:00:00",
  "countryPublished": "Benin",
  "conference": "Miss Luis mi Shuli",
  "originalAuthorName": "Eberhard i Muniente",
  "title": "officiate semi Nantes's",
  "declaredTags": "Industrial Control System|Tendermint|cyber enabled devices|adversary behavior",
  "releaseReason": "gutsiest/ill's",
  "docName": "CO_19_2306",
  "fundingCenter": 12,
  "resourceURL": "https://final's.com",
  "fundingDepartment": "rs14",
  "caseNumber": "74-8111",
  "publicationDate": "8/1/2017 12:00:00 AM",
  "releaseYear": 2008,
  "releaseStatement": "Conference/Workshop",
  "approver": "$Vicentina $Olival",
  "handCarry": 1,
  "authorDivision": "tn30",
  "copyrightOwner": "Kameliya Palero",
  "lastModifiedDate": "2/23/2000 12:00:00 AM",
  "releaseDate": "1/3/2019 12:00:00 AM",
  "onMitrePublicSrvr": 0,
  "projectNumber": "5336GFBD22",
  "materialType": "Article",
  "publicationType": "Paper",
  "authorCenter": 51,
  "originalAuthorID": "Amen",
  "mitrePublicServer": 0,
  "subjectTerminology": "Management (General)",
  "dateEntered": "12/2/2010 12:00:00 AM",
  "documentInfoURL": "https://bedazzles disquisition's Osvaldo Maura remarriage's.com",
  "softShell": 0,
  "publishedOnNonMITREServer": 0,
  "priorCaseNumbers": "CASE2: 17-1719|CASE1: 16-3366|CASE1: 16-2039|CASE3  17-2445",
  "organization": "ou48",
  "authorDepartment": "sk17",
  "publicationYear": 2016,
  "sensitivity": "Public",
  "copyrightText": "(c) 2016 The MITRE Corporation All Rights Reserved",
  "fundingSource": "Non-Sponsored",
  "level1": "MITRE Legacy",
  "fundingDivision": "Allegheny relabeling Rubik's cola's trendy",
  "publishedOutsideUSA": 0,
  "level3": "gw27",
  "level2": "kq38",
  "sdl_id": "144ac60ec2624ef2b8511d6ea3b9b994",
  "text": "with Respect \\nto Mission System Materiel \\nSolutions \\nAnalysis Reconnaissance Program Office systems handling \\ninformation about needs, \\nconcept of operations, interfaces Acquire information about the \\nto-be-acquired mission \\nsystem Technology \\nMaturity and Reconnaissance Program Office systems handling \\ninformation about technical Acquire information from \\ndesign review xvi Risk Reduction \\nPhase alternatives, risks Engineering & \\nManufacturing \\nDevelopment Reconnaissance Program Office, contractors and \\nsubcontractor systems handling \\ninformation about design \\ndecisions and implementation \\nprocesses Acquire information about \\ntechnical architecture of \\nmission system Weaponize There are no target system \\nexamples because this activity \\ntakes place on an adversary \\nsystem using information gained \\nin previous stages Develop cyber weapon, based \\non expected technical \\narchitecture of the mission \\nsystem Deliver Contractor and sub-contracter \\nsystems used to manage and \\nexecute design and \\nimplementation processes Deliver the cyber weapon \\nget the cyber weapon / \\nmalicious component into the \\ncontractors development \\nenvironment, so that it will be \\nintegrated into the mission \\nsystem Exploit Contractor and subcontractor \\nsystems used to manage and \\nexecute design and \\nimplementation processes Take advantage of a \\nvulnerability to install the \\ncyber weapon, i.e., to make it \\npart of the mission system Control / \\nMaintain Contractor and subcontractor \\nsystems used to manage and \\nexecute design and \\nimplementation processes; \\nProgram Office systems handling \\ninformation from design reviews Prevent the detection of the \\ninsertion of the cyber weapon \\ninto the mission system \\nundermine contractor quality \\nassurance processes and tools \\nto prevent the insertion of the \\nmalicious component from \\nbeing detected. Production & \\nDeployment Weaponize There are no target system \\nexamples because this activity \\ntakes place on an adversary \\nsystem using information gained \\nin previous stages Develop cyber weapons based \\non technical architecture and \\nidentified characteristics of \\nthe mission system (e.g., \\nspecific products or \\ncomponents) Deliver Contractor and subcontrator \\nsystems used to manage and \\nexecute design and \\nimplementation processes; COTS \\nsupply chain for previously \\nidentified components Deliver cyber weapons get \\nthe cyber weapon / malicious \\ncomponent into the \\ncontractors development \\nenvironment, so that it will be \\nintegrated into the mission \\nsystem Exploit Contractor and subcontractor \\nsystems used to manage and \\nexecute design and \\nimplementation processes; COTS \\nsupply chain for previously Take advantage of a \\nvulnerability to install the \\ncyber weapon, i.e., to make it \\npart of the mission system xvii identified components\\nControl / \\nMaintain Contractor and subcontractor \\nsystems used to manage and \\nexecute design and \\nimplementation processes Prevent the detection of the \\ninsertion of the cyber weapon \\ninto the mission system \\nundermine contractor quality \\nassurance processes and tools \\nto prevent the insertion of the \\nmalicious component from \\nbeing detected Execute Execute malware so it \\nsuccessfully corrupts or \\notherwise undermines critical \\ncontractor developed systems Execute malware the \\ndefenders environment in the \\ndeployed system before being \\nmigrated to Operations and \\nSupport Maintain Systems used in test and \\nevaluation, at prime contractor, \\nindependent validation and \\nverification (IV&V) organization, \\nor cyber range Prevent the detection of the \\ninsertion of the cyber weapon \\ninto the mission system \\nundermine quality assurance \\nprocesses and tools to \\nprevent the insertion of the \\nmalicious component from \\nbeing detected; modify test \\nresults Operations & \\nSupport Control Mission system Control the Attack in the \\nMission System Environment Execute Mission system Achieve the intended effects \\non the mission system Maintain Mission system; systems used for \\nmaintenance and support Maintain Presence for Future \\nAttacks Example Adversary Actions3.3\\nThis subsection discusses example actions of attacks at each acquisition phase in the abstract. \\nSection 4 provides a notional example that is more specific. These attacks, typically employ \\ncommon cyber attacks along with coordination across multiple attacks, are part of the larger, \\nrecursive, cyber attack lifecycle described in Section 3.2. \\nIn the Materiel Solutions Analysis and Technology Maturity and Risk Reduction Phases, the \\nadversary is focused on reconnaissance trying to find out about the end system. The \\nreconnaissance activities the adversary most likely uses in these phases are extremely hard to \\ndetect because they are frequently passive (e.g., collecting data by listening to traffic on a \\nnetwork) or hidden (e.g., hiding information exfiltration in normal network traffic). These \\nactivities can still be mitigated against by using one or more of the techniques described in \\nsection5. Addressing the reconnaissance activities in the Materiel Solutions Analysis phase and \\nthe Technology Maturity and Risk Reduction phase is one of the most effective ways of \\naddressing the adversarys weaponization activities. If the adversary does not have adequate \\ninformation it is hard for them to develop effective weaponized tools.\\nThe adversary focuses their weaponization, attack delivery, and installing the exploit in the \\nEngineering and Manufacturing Development Phase and the Production and Deployment phase. xviii 7 Attacks A6, A 27 and A29 from [3] are examples of this type.\\n8 Attack A37 from [3]is an example of this type of attack. There is also further reconnaissance to determine what to do in this and later acquisition lifecycle \\nphases. Examples of these types of attacks include7 microprocessors or other chips with secret \\nback doors substituted for legitimate hardware components, malicious code inserted into open \\nsource software libraries, and establishing rogue processes in an integration facility to \\nclandestinely insert maliciously altered components.\\nThe adversary shifts towards Control, Execute and Maintain activities as the acquisition lifecycle \\nprogresses into the Production and Deployment phase and the Operations and Support phase. By \\nthe Production and Deployment phase, the adversary already has a foothold in the mission \\nsystem. While the adversary is likely still developing or honing their weapons, delivering new \\nversions or updates, and initiating new attacks; their interests have transitioned to controlling \\ntheir tools, executing the attack on the mission, and maintaining their presence (e.g., when the \\nsystem goes through independent verification and validation). This is particularly true as the \\nsystem moves towards the later portion of the phase. Some examples of what the adversary might \\ndo are: corrupt critical operational data by injecting false but believable data into the system \\nduring configuration8, or leverage backdoors previously inserted into software or compromised \\nhardware or firmware to control systems.\\nDuring the Operations and Support phase, the adversary focuses on Control, Execute and \\nMaintain activities. The adversary may trigger their backdoors to establish C2 channels. \\nAlternately, their cyber weapon could be set to auto-trigger based on conditions that can be \\ndetected within the mission system. Adversary Advantages Gained Via Supply Chain Attacks3.4\\nAs stated above, when employing a supply chain attack, the adversary wants to impact \\nconfidentiality, integrity, and/or availability (CIA) of critical mission systems so as to affect the \\nmission which depends on those systems. Supply chain attacks, just like any cyber attack, \\nexploit a target system and then seek to control, execute and maintain presence on that system. \\nSo, a supply chain attack once delivered, will appear to a network defender like any other cyber-\\nattack. It will use the same tactics, techniques and procedures (TTPs) (establish persistence, gain \\ncredential access, lateral movement etc.). In their delivery, however, supply chain attacks are \\nunique and the adversary has the advantages of establishing persistence early by embedding the \\nattack within one component of the end mission system and delivering the cyber weapon \\nundetected. Cyber-attacks are, for the most part, delivered from an external source to an \\noperational network. Therefore, perimeter defenses such as intrusion detection devices and \\nfirewalls are effective tools to detect and stop attacks upon entry. However, a supply chain attack \\nis often initiated by an embedded change to a component of the system which is accepted as a \\nknown good. An approved or trusted delivery mechanism such as a software update \\nfunction delivers the supply chain attack unsuspected by a network defender. As stated in the \\nrecent Defense Science Board Task Force on Cyber Supply Chain when done effectively, \\nmalicious insertion will not be detectable until actuated and it may present as a design flaw when \\nultimately observed [6].\\nThe supply chain attack is initiated early in the system design so that persistence can be \\nestablished before the system is built. Once present in a low-level component such as firmware, \\na supply chain attack is difficult to detect on an operational network and is a key advantage of \\nsupply chain attacks. xix A recent example of an attack in which the software supply chain was compromised is Nyetya \\n(Cisco TALOS naming convention) or NotPetya (widely known name) ransomware of late June \\n2017. This ransomware, per preliminary reports, did not gain access via an email or office \\ndocument. Instead, the entry point is thought to be via the update system for a Ukrainian tax \\naccounting package (MeDoc) [15]. Once entry was gained, the adversary enumerated the \\nnetwork components, stole credentials, moved laterally eventually encrypting large amounts of \\ninformation. \\nAnother example of an effective supply chain attack is a Basic Input Output System (BIOS) \\nimplant. This implant can be done at a point within the supply chain prior to operations or by an \\nautomated firmware management function such as Intel Active Management Technology or Intel \\nStandard Manageability (AMT, LMS) that operate below the OS (unobservable from OS/kernel). \\nA BIOS or unified extensible firmware interface (UEFI) implant establishes presence and \\nmaintains that presence even if the operating system is re-installed. \\nIn summary, supply chain attacks can be distinctive",
  "updated_at": "5/24/2019 12:00:00 AM",
  "created_at": "11/11/2010 12:00:00 AM"
}