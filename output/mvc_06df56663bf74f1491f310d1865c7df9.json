{
  "sdl_source_type": "MVC",
  "project_name": "nfy",
  "project_sponsor": "jjeerracpo-6269",
  "project_end": "2012-03-31T00:00:00",
  "portfolio": "come's dimpled",
  "super_portfolio": "LYV",
  "sub_portfolio": "bbd - knickers's freeing",
  "clarify": "Cancelled",
  "project_url": "http://ascribes.com",
  "project_page_charge_code": "998AOYM",
  "project_leader": "Jarred M Martirosov",
  "sdl_date": "2020-05-24T00:00:00",
  "countryPublished": "Argentina",
  "conference": "Hellenisms Virgo ig Nasreddine",
  "originalAuthorName": "Glenys a Presa",
  "title": "anachronistic hustler importunity's",
  "declaredTags": "Distributed Control Systems|simulation data|city planning",
  "releaseReason": "mower/costume",
  "docName": "DX_75_8363",
  "fundingCenter": 32,
  "resourceURL": "https://Fuzhou's.com",
  "fundingDepartment": "ud33",
  "caseNumber": "27-8582",
  "publicationDate": "2/4/2017 12:00:00 AM",
  "releaseYear": 2003,
  "releaseStatement": "MITRE External Publication",
  "approver": "$Irlanda $Arnosi",
  "handCarry": 6,
  "authorDivision": "rm44",
  "copyrightOwner": "Morteza Mu√±oz",
  "lastModifiedDate": "8/8/2003 12:00:00 AM",
  "releaseDate": "1/4/2011 12:00:00 AM",
  "onMitrePublicSrvr": 0,
  "projectNumber": "7952FVMF38",
  "materialType": "Article",
  "publicationType": "Article",
  "authorCenter": 77,
  "originalAuthorID": "Marcus",
  "mitrePublicServer": 0,
  "subjectTerminology": "Management (General)",
  "dateEntered": "9/6/2000 12:00:00 AM",
  "documentInfoURL": "https://Beverley Florence twisters nonsmokers misconception.com",
  "softShell": 0,
  "publishedOnNonMITREServer": 0,
  "priorCaseNumbers": "CASE1: 17-2336|CASE2: 17-2450|CASE3  18-2300",
  "organization": "wj11",
  "authorDepartment": "wo62",
  "publicationYear": 2018,
  "sensitivity": "Public",
  "copyrightText": "(c) 2016 The MITRE Corporation All Rights Reserved",
  "fundingSource": "DHS FFRDC Contracts",
  "level1": "MITRE National Security Sector",
  "fundingDivision": "wolverine's encompass bipolar glitches um",
  "publishedOutsideUSA": 0,
  "level3": "fo69",
  "level2": "jt64",
  "sdl_id": "06df56663bf74f1491f310d1865c7df9",
  "text": "    \"text\": \" blockchain_tech_report_final_2018 Blockchain Technology for \\nGovernment Authors: Dave Bryson \\n Dave Penny \\n David C. Goldenberg \\n Gloria Serrao \\nDecember 2017 MT R 18 00 46 MIT R E T E C H N I C A L R EPO R T Project No.: 10MSRF18-AA \\nThe views, opinions and/or findings \\ncontained in this report are those of \\nThe MITRE Corporation and should \\nnot be construed as an official \\ngovernment position, policy, or \\ndecision, unless designated by other \\ndocumentation. \\nApproved for Public Release; \\nDistribution Unlimited. Case \\nNumber 18-1069 \\n \\nALL RIGHTS RESERVED. ii Approved By iii iv Abstract \\nThis document presents an introduction to blockchain technology with a specific focus on the \\ncore technologies, platforms, and applications that may be beneficial to MITREs government \\nsponsors. The document is intended to introduce MITRE and its sponsor to blockchain \\ntechnology, and establish a base of knowledge upon which to further explore MITRE sponsor \\nblockchain use cases and research. An introduction to blockchain and its critical components \\nincluding cryptography, consensus, and distributed ledgers is provided. Public and permissioned \\nblockchains are compared, and a framework is provided that outlines when it is beneficial to use \\nblockchain solutions. Use cases applicable to MITRE sponsors such as healthcare, identity, \\nsupply chain, and the Internet of Things (IoT) are considered. A survey of leading permissioned \\nblockchains such as Ethereum and Tendermint is presented, and important emerging features \\nsuch as private transactions and state channels that strengthen enterprise blockchains are \\ndiscussed. v vi Executive Summary \\nBlockchain technology is evolving at a very rapid pace. Understanding the core components of \\nthe technology and how they work together is critical to tracking the state of the art. While each \\ncomponent plays a critical role in the technology stack, consensus is at the heart of the system \\nand important to understand. Carefully choosing the right consensus algorithm based on the \\ndesired level of trust and security will be critical to a successful blockchain application. While public blockchains provide the most security as they are designed to operate in a trust-less \\nenvironment, government users will be most interested in a permissioned blockchain. However, \\nthe nature of a permissioned blockchain requires careful planning and governance to establish \\nthe parties participating in the consensus process. Without proper governance, there may be a \\npossibility of politically centralizing some of the key functionality of the blockchain, limiting its \\ncapabilities, and providing a false sense of security. As more look to permissioned blockchains to modernize traditional applications, there are \\nseveral requirements that need to be addressed. For example, privacy and confidentiality on the \\nblockchain, transaction scalability, and blockchain-to-blockchain connectivity. While theres \\nongoing active research in these areas across several open-source communities, permissioned \\nblockchains need to further evolve to fully meet the needs of the government user. vii Table of Contents 2.1 What a Blockchain Does \\n2.2 How it Operates \\n3.1.1 Hash Function \\n3.1.2 Digital Signature \\n3.2.1 Proof of Work (Nakamoto Consensus) \\n3.2.2 Byzantine Fault Tolerant (BFT) Consensus \\n3.4 Smart Contracts \\n3.5 Peer to Peer Network \\n3.6 Typical Transaction Flow \\n4.2 Permission Blockchain \\n6.2 Identity \\n6.3 Supply Chain and Logistics \\n6.4 Internet of Things \\n7.2 Quorum \\n7.3 Tendermint \\n7.4 Hyperledger Fabric \\n7.5 Guardtime \\n8.2 State Channels \\n8.3 Bulk Data Storage \\n8.4 Connecting Blockchains \\nFigure 1. Blocks are Linked by the Hash of Their Contents. \\nFigure 2. Following a Transaction Through the Blockchain (Blockgeeks, 2017). \\nFigure 3. Blockchain Decision Chart (IEEE: Do you need a blockchain). \\nTable 1. Consensus Comparison. \\nTable 2. Public vs. Permissioned Blockchain. \\nTable 3. Guardtime Pros and Cons \\nIn 2009, a developer (or developers) by the name of Satoshi Nakamoto created an electronic \\npayment system named Bitcoin (Nakamoto, 2009). The goal of Bitcoin was simple: allow two \\nparties to directly exchange a digital currency without the need for a trusted 3rd party (e.g., a \\nbank) to mediate the transfer. Over the past eight years, Bitcoin has grown to be one of the most \\nsuccessful cryptocurrencies. It has also proved to be one of the first public-facing, fault-tolerant \\ndistributed systems capable of operating in an adversarial environment. As of 2017, there are over 1000 different cryptocurrencies, many based on Bitcoin, with a \\ncombined market capitalization approaching $1 trillion. (CoinMarket Cap, 2017). The success of \\nBitcoin and the emergence of new platforms such as Ethereum that offer programmable smart \\ncontracts, is pushing the technology beyond the cryptocurrency use case and driving the growing \\ninterest in blockchain technology. The level of interest is especially high in enterprise applications. The recently formed Ethereum \\nEnterprise Alliance (Enterprise Ethereum Alliance, 2016) and the open-source Hyperledger \\nproject (Hyperledger, 2017) now have hundreds of members across a broad spectrum of Fortune \\n500 companies. Virtually every major software vendor is offering services and consulting on \\nblockchain technology. What is a Blockchain? \\nA blockchain can be compared to a bank ledger containing transactions. It provides information \\nabout the date, time, and amount of money or other property of interest changing ownership. \\nOnce transactions are written to the ledger, they are permanent; they cant be changed or deleted. \\nTransactions are bundled into blocks and these blocks are linked to form the ledger, which is \\ncalled blockchain. A blockchain is distributed over multiple nodes using an underlying peer-to-\\npeer (P2P) network protocol for node discovery and communication. The components of blockchain are discussed in detail in Section 3, but are briefly described \\nbelow for context. Cryptography: hash functions that link blocks together providing integrity of the chain \\nand digital signatures providing integrity for the transactions. Consensus Algorithm: The process by which parties to a blockchain decide on the \\nordering and presence of transactions on the ledger. Distributed Ledger: A distributed, replicated, representation of all transactions \\n P2P Protocol: The protocol that manages the peer nodes of the network that support blockchain. Performs communication between nodes, flow control, node discovery, and \\nframing. Smart Contracts: business rules or logic that can extend the functionality of a blockchain 2.1 What a Blockchain Does \\nAt its core, a blockchain enables a network of peer computers (or nodes) to validate, settle, and \\nagree on a record of transactions. It establishes a form of trust between parties that may not \\notherwise trust each other, and does so without relying on traditional centralized services, or \\ntrusted 3rd parties. This new form of decentralized trust has generated interest with users across a \\nwide range of domains. Companies are investing research and development efforts into 2 blockchain technology, with the hopes of revamping existing processes to reduce cost while \\nimproving security, accountability, and transparency. 2.2 How it Operates \\nA blockchain is a replicated state machine. A given state is synchronized across a set of \\nmachines, or nodes, such that these nodes function as a single machine, despite the potential that \\nsome will fail either through normal faults or malicious activity. The state of a blockchain is driven by incoming transactions, each transaction causing a state \\ntransition. What the state represents depends on the goal of the blockchain. In the case of \\ncryptocurrency, the state is the balance of accounts, while in an enterprise blockchain, the state \\nmay represent other forms of information. A transaction can be thought of as the fundamental unit of work in a blockchain. It is the input to \\nthe system, an atomic operation, that drives a state transition. It either succeeds and updates the \\nstate of the system, or it fails and is ignored. A transaction is redundantly verified by every \\nblockchain node in the network and multiple transactions are batched into blocks for efficient \\nprocessing. The consensus protocol enables all nodes to agree on the transactions in a block and the order of \\nthe blocks ensuring identical copies of the blockchain are stored on every machine. These new \\nblocks are cryptographically linked to the prior block to prevent them from being altered once \\nagreed upon. The combination of a tamper-proof transaction log and a deterministic state \\ntransition ensures that all machines can compute the same state given the same transaction log. Key Components of a Blockchain 3.1 Cryptography \\nA blockchain relies on two cryptographic primitives for many of its security properties: \\ncryptographic hash functions and digital signatures. 3.1.1 Hash Function \\nA cryptographic hash function is a mathematical function that takes in an input string of any size \\nand produces a fixed sized output. Cryptographic hash functions have two main properties that \\nare used to secure blockchains. 1. It is possible to efficiently compute the hash function in the forward direction; however, \\nits nearly impossible to compute the inverse of the hash function. In other words, its \\ninfeasible to learn any valid input from the output hash. 2. Small changes in the input to a hash function result in large and unpredictable changes in \\nthe output. As an example of the above two properties, using the SHA-256 hash function, \\nwe can create a unique fingerprint of the word HELLOWORLD: sha256(HELLOWORLD) = \\n'0x0b21b7db59cd154904fac6336fa7d2be1bab38d 49584068cdcb74' The hash of the word results in a 256-bit value and it will always be the same value given \\nthe same input. However, given the 256-bit",
  "updated_at": "12/31/2009 12:00:00 AM",
  "created_at": "7/17/1994 12:00:00 AM"
}